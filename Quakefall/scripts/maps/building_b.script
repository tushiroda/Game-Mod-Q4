/*----------------------------------------------------------------------------------------
Scripts for Building B (in the convoy level)
------------------------------------------------------------------------------------------*/


namespace map_building_b
{	//Start namespace

float	floor1ShaftsReady = 0;
float	floor2ShaftsReady = 0;
float	afterBattle = 0;
float	se3LightsOn = 1;
float	se2LightsOn = 1;
float	bringDownTheGates = 0;
float	marinesWithPlayer = 0;
float	upperLoadingBayMonstersDead = 0;
float	welderMonstersDead = 0;
float	singerIntoPosition = 0;
float	singerIsOffElevator = 0;
float	rodriguezIsOffElevator = 0;
void	subEntrance01Sequence();
void	entityColorChange(entity e, vector v);

void door_sparks_1()
{
	sys.trigger($door_sparks_1);
}
void door_sparks_2()
{
	sys.trigger($door_sparks_2);
}
void door_sparks_3()
{
	sys.trigger($door_sparks_3);
}

////////////////////////////////////////////////////////
//	Shaking machines	////////////////////////
////////////////////////////////////////////////////////

void gen_eng_01_shake()
{
	$gen_eng_01.time (.1);
	
	while(1)
	{
		$gen_eng_01.rotateOnce ( '1.5 0 0' );
		sys.waitFor ($gen_eng_01);
		$gen_eng_01.rotateOnce ( '-1.5 0 0' );
		sys.waitFor ($gen_eng_01);
	}
}

void gen_eng_02_shake()
{
	$gen_eng_02.time (.1);
	
	while(1)
	{
		$gen_eng_02.rotateOnce ( '2 0 0' );
		sys.waitFor ($gen_eng_02);
		$gen_eng_02.rotateOnce ( '-2 0 0' );
		sys.waitFor ($gen_eng_02);
	}
}

void gen_eng_03_shake()
{
	$gen_eng_03.time (.1);
	
	while(1)
	{
		$gen_eng_03.rotateOnce ( '1.5 0 0' );
		sys.waitFor ($gen_eng_03);
		$gen_eng_03.rotateOnce ( '-1.5 0 0' );
		sys.waitFor ($gen_eng_03);
	}
}

void gen_eng_04_shake()
{
	$gen_eng_04.time (.1);
	
	while(1)
	{
		$gen_eng_04.rotateOnce ( '2 0 0' );
		sys.waitFor ($gen_eng_04);
		$gen_eng_04.rotateOnce ( '-2 0 0' );
		sys.waitFor ($gen_eng_04);
	}
}

////////////////////////
//	grouped together
//////////////////

void gen_eng_05_shake()
{
	$gen_eng_05.time (.1);
	
	while(1)
	{
		$gen_eng_05.rotateOnce ( '-1 0 0' );
		sys.waitFor ($gen_eng_05);
		$gen_eng_05.rotateOnce ( '1 0 0' );
		sys.waitFor ($gen_eng_05);
	}
}

void gen_eng_06_shake()
{
	$gen_eng_06.time (.1);
	
	while(1)
	{
		$gen_eng_06.rotateOnce ( '1 0 0' );
		sys.waitFor ($gen_eng_06);
		$gen_eng_06.rotateOnce ( '-1 0 0' );
		sys.waitFor ($gen_eng_06);
	}
}

void gen_eng_11_shake()
{
	$gen_eng_11.time (.5);
	
	while(1)
	{
		$gen_eng_11.rotateOnce ( '1 0 0' );
		sys.waitFor ($gen_eng_11);
		$gen_eng_11.rotateOnce ( '-1 0 0' );
		sys.waitFor ($gen_eng_11);
	}
}

void gen_eng_12_shake()
{
	$gen_eng_12.time (.35);
	
	while(1)
	{
		$gen_eng_12.rotateOnce ( '1.5 0 0' );
		sys.waitFor ($gen_eng_12);
		$gen_eng_12.rotateOnce ( '-1.5 0 0' );
		sys.waitFor ($gen_eng_12);
	}
}
void gen_eng_13_shake()
{
	$gen_eng_13.time (.15);
	
	while(1)
	{
		$gen_eng_13.rotateOnce ( '1.5 0 0' );
		sys.waitFor ($gen_eng_13);
		$gen_eng_13.rotateOnce ( '-1.5 0 0' );
		sys.waitFor ($gen_eng_13);
	}
}
void gen_eng_14_shake()
{
	$gen_eng_14.time (.1);
	
	while(1)
	{
		$gen_eng_14.rotateOnce ( '1.5 0 0' );
		sys.waitFor ($gen_eng_14);
		$gen_eng_14.rotateOnce ( '-1.5 0 0' );
		sys.waitFor ($gen_eng_14);
	}
}


// Spawner object for upper loading bay. Makes it possible to call functions on spawner created enemies.
object spawnerObj
{
	void init();
};

void spawnerObj::init()
{
	aiScriptedMoveWait(self, sys.getEntity(self.getKey("target")), 16, true);
	self.setEnemy($player1);
}

// Helper functions
//-------------------------------------------------------------------------------
// void triggerMoveFaceAnim()
//
// Function that triggers a monster, makes him move to a target null, 
// face another target null, and perform an animation.
// This makes threading a lot easier.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void triggerMoveFaceAnim(entity ent, entity targetNullMovePos, entity targetNullFaceDir, string animName)
{
	sys.trigger(ent);
	aiScriptedMoveWait(ent, targetNullMovePos, 16, 1);
	aiScriptedFaceWait(ent, targetNullFaceDir, 1);
	aiScriptedAnim(ent, animName, 1, 1);

} //-------------- End void triggerMoveFaceAnim ---------------

//-------------------------------------------------------------------------------
// void moveFaceAnimLoop()
//
// Function that triggers a monster, makes him move to a target null, 
// face another target null, and perform a looping animation.
// This makes threading a lot easier.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void moveFaceAnimLoop(entity ent, entity targetNullMovePos, entity targetNullFaceDir, string animName)
{
	sys.trigger(ent);
	aiScriptedMoveWait(ent, targetNullMovePos, 16, 1);
	aiScriptedFaceWait(ent, targetNullFaceDir, 1);
	aiScriptedAnimLoop(ent, animName, 4);

} //-------------- End void moveFaceAnimLoop ---------------

//-------------------------------------------------------------------------------
// void moveFace()
//
// Function that makes an entity move to a target null and 
// face another target null.
// This makes threading a lot easier.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void moveFace(entity ent, entity targetNullMovePos, entity targetNullFaceDir)
{
	aiScriptedMoveWait(ent, targetNullMovePos, 16, 1);
	aiScriptedFaceWait(ent, targetNullFaceDir, 1);

} //-------------- End void moveFace ---------------

// Level functions.

//-------------------------------------------------------------------------------
// void sledgeSpeaks()
//
// This is when Sledge tells you to go to the main control room to talk to Lt. Voss
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void sledgeSpeaks()
{
	aiSpeak($Sledge, "lipsync_vo_1_2_8_10_1");
	sys.wait(4);
	aiScriptedAnimWait($Sledge, "point_back", 8, 1);	
	aiScriptedStop($Sledge);
//	$Sledge.setTalkState ( TALK_OK ); 
	// trigger for the other marines to talk to the player.
	sys.wait(2);
	sys.trigger($rodSingTrig);
	$Sledge.lookAt($null_entity);
	aiScriptedMoveWait( $Sledge, $sledgeStop2, 16, 1 );
	// faces the lift call gui
	aiScriptedFaceWait( $Sledge, $func_static_10546, 1 );		

} //-------------- End void sledgeSpeaks ---------------

//-------------------------------------------------------------------------------
// void foyerSequence()
//
// This starts the sequence in the foyer with Voss, Strassa, Rodriguez, and Singer.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void rodToStrauss()
{
	aiScriptedAnimWait($Rodriguez, "idle_wrist_gui_start_fast", 4, 1);
	// radiochatter of Rodriguez talking to Voss
	sys.trigger($rodriguezTalks);
	aiSpeak($Rodriguez, "lipsync_vo_1_2_8_20_2");
	aiScriptedAnimWait($Rodriguez, "idle_wrist_gui_end_fast", 4, 1);

	aiScriptedStop($Singer);
	sys.waitFrame();
	thread moveFace($Singer, $target_null_ulb_13, $target_null_ulb_14);
	sys.wait(.25);
	aiScriptedStop($Rodriguez);
	sys.waitFrame();
	thread moveFace($Rodriguez, $target_null_ulb_11, $target_null_ulb_12);
}
void giveObj()
{
	// Give the Welder Objective to the player.
	sys.trigger($OBJ_GetWelder);
}
void lockControlDoor()
{
	// lock the player in the room.  Cheese, but it's important information for the player	
	$func_static_8470.setShaderParm(7, 0);
	$func_door_100.lock(1);
	sys.wait(1.5);
	sys.trigger($controlRoomDoorSndLock);
}
void foyerSequence()
{
	$Voss.lookAt($player1);
	$func_static_9249.setShaderParm(7, 1);
	$func_door_136.lock(0);
	
	sys.trigger($item_objectivecomplete_1);
	
	thread lockControlDoor();

	while($Sledge.isSpeaking()) { sys.waitFrame(); }

	$Voss.lookAt($Rodriguez);
	aiSpeak($Strassa, "lipsync_vo_1_2_8_20_1");
	sys.wait(3);
	thread rodToStrauss();
	
	sys.wait(1.5);
	
	$Voss.lookAt($player1);
	sys.wait(1);
	
	aiSpeak($Voss, "lipsync_vo_1_2_8_20_3");
	sys.wait(2);
	$Voss.lookAt($Strassa);
	sys.wait(1.5);

	aiSpeakWait($Strassa, "lipsync_vo_1_2_8_20_4");

	$Voss.lookAt($player1);
	aiSpeakWait($Voss, "lipsync_vo_1_2_8_20_5");
	
	// give objectives to the player
	thread giveObj();
	
	// trigger hurt marine
	sys.trigger($hurt_marine_2);

	// unlock the control room.  Cheese, but it's important information for the player	
	sys.trigger($controlRoomDoorSndUnLock);
	sys.wait(.25);
	$func_static_8470.setShaderParm(7, 1);
	$func_door_100.lock(0);	

	aiScriptedStop($Voss);
	$Voss.setTalkState ( TALK_OK ); 
	$Strassa.setTalkState ( TALK_BUSY );
//	$Sledge.setTalkState ( TALK_OK ); 

	// rotate machines in the next room.	
	thread gen_eng_13_shake();
	thread gen_eng_14_shake();
	
	$rodSingTrig.remove();

} //-------------- End void foyerSequence ---------------

//-------------------------------------------------------------------------------
// void preUpperLoadingBaySequence()
//
// This is when Rodriguez and Singer first address the player.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void rodFirstDoor()
{
	aiScriptedAnimWait($Rodriguez, "idle_wrist_gui_start_fast", 4, 1);
	aiScriptedAnimLoop($Rodriguez, "idle_wrist_gui_loop", 0);
	sys.wait(.6);
	aiScriptedAnimWait($Rodriguez, "idle_wrist_gui_end_fast", 4, 1);
}
void singerLoaded()
{
	aiScriptedAnimWait($Singer, "weapon_check_2", 4, 1);
	aiScriptedAnimLoop($Singer, "relax_idle", 0);
}
void preUpperLoadingBaySequence()
{
	$Rodriguez.lookAt($player1);
	$Singer.lookAt($player1);
	aiSpeakWait($Rodriguez, "lipsync_vo_1_2_8_30_1");

	$Singer.lookAt($Rodriguez);
	$Rodriguez.lookAt($Singer);
	thread singerLoaded();
	aiSpeakWait($Singer, "lipsync_vo_1_2_8_30_2");

	thread rodFirstDoor();

	sys.wait(.6);
	aiSpeakWait($Rodriguez, "lipsync_vo_1_2_8_30_5");

//	sys.println("stopped");

	//aiScriptedAnimLoop($Rodriguez, "relax_idle", 0);

	aiSpeak($Strassa, "lipsync_vo_1_2_8_30_6");
	radioChatterPlayWait ($func_radiochatter_ulb_3, "");	

	sys.wait(1);

	$func_static_9251.setShaderParm(7, 1);
	$func_static_9252.setShaderParm(7, 1);
	$func_door_137.lock(0);
	sys.trigger($upperBayUnLockSnd);
	$func_door_137.open();
	
	$Rodriguez.lookAt($null_entity);
	$Singer.lookAt($null_entity);
	sys.wait(1);

	$Singer.becomeAggressive();
	$Rodriguez.becomeAggressive();
	aiScriptedStop($Singer);
	aiScriptedStop($Rodriguez);
	sys.trigger($tetherUpperBay);
	
	$Rodriguez.setTalkState( TALK_OK ); 
	$Singer.setTalkState( TALK_OK ); 
	
	//shouldn't need since there is a tether.
//	aiScriptedMove($Rodriguez, $target_null_ulb_19, 16, 1);
//	sys.wait(.15);
//	aiScriptedMove($Singer, $target_null_ulb_20, 16, 1);

} //-------------- End void preUpperLoadingBaySequence ---------------

//-------------------------------------------------------------------------------
// void upperLoadingBaySequence()
//
// This is the sequence for the upper loading bay when grunts and strogg come
// jumping down on the player from above.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void upperLoadingBaySequence()
{
	// Lock door behind player.
	$func_static_9251.setShaderParm(7, 0);
	$func_static_9252.setShaderParm(7, 0);
	$func_door_137.lock(1);
	sys.wait(1.5);
	sys.trigger($upperBayLockSnd);

	// Hide the guys in the foyer.
	$Voss.hide();
	$Strassa.hide();
	$Sledge.hide();
	$door_guard_1.hide();
	$hurt_marine.hide();
	$medic_1.hide();

	// First grunt.
	$func_door_161.open();

	sys.wait(2);

	aiSpeak($Rodriguez, "lipsync_vo_1_2_8_40_1");

} //-------------- End void upperLoadingBaySequence ---------------

void jump90(entity stroggBack)
{
//	sys.println("jump 90");
	aiScriptedMoveWait( stroggBack, $target_null_48, 16, 1 );
	stroggBack.scriptedJumpDown( 90 );
	while(!stroggBack.scriptedDone())
	{
		sys.waitFrame();
	}
}

void jump180(entity stroggRight)
{
//	sys.println("jump 180");
	aiScriptedMoveWait( stroggRight, $target_null_47, 16, 1 );
	stroggRight.scriptedJumpDown( 180 );
	while(!stroggRight.scriptedDone())
	{
		sys.waitFrame();
	}
}


//-------------------------------------------------------------------------------
// void upperLoadingBayAddKill()
//
// This adds a kill to the kill count for the upper loading bay sequence.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void upperLoadingBayAddKill()
{
	upperLoadingBayMonstersDead++;

} //-------------- End void upperLoadingBayAddKill ---------------

//-------------------------------------------------------------------------------
// void marinesOnElevator()
//
// Makes the marines that are with the player (if any) step onto the elevator. 
// This is called only when the elevator reaches the top floor.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void marinesOnElevator()
{
//	sys.println("Force marines onto elevator");
	
	aiScriptedMove($Rodriguez, $target_null_ulb_18, 16, 1);
	sys.wait(.15);
	aiScriptedMove($Singer, $target_null_ulb_16, 16, 1);
}
void singerOffElevator()
{
	if($Singer != $null_entity)
	{
		$Singer.setEnemy($null_entity);
	}
}
void rodriguezOffElevator()
{
	if($Rodriguez != $null_entity)
	{
		$Rodriguez.setEnemy($null_entity);
	}
}
void lowerGui()
{
//	sys.println("elevator disabled");
	// elevator in buiding_b that leads to the lower level.
	//$func_movator_30.setKey("gui_parm_disable", "1"); // the gui can't be clicked until this is set back to 0

	$func_movator_30.setGuiParm("noninteractive", "1"); // the gui can't be clicked until this is set back to 0
}
void offLowerElevator()
{
	// if they have an enemy, this should get rid of it.
	thread singerOffElevator();
	thread rodriguezOffElevator();
}
void singerLowerDoor()
{
	aiSpeak($Singer, "lipsync_vo_1_2_8_50_1");
	sys.wait(1.5);
	aiScriptedAnimLoop($Singer, "idle_wrist_gui_loop", 4);
	sys.wait(1.5);
	$Singer.startSound("snd_vo_1_2_8_50_2", SND_CHANNEL_ANY, false);
	aiScriptedAnimWait($Singer, "idle_wrist_gui_end_fast", 4, 1);
	aiScriptedAnimWait($Singer, "relax_idle_end", 4, 1);

	sys.wait(1);
	aiSpeak($Rodriguez, "lipsync_vo_1_2_8_51_1");

	sys.wait(.25);

	// unlock door leading into lower subEntrance.
	$func_static_9265.setShaderParm(7, 1);
	$func_door_141.lock(0);
	$func_door_141.open();	

	sys.trigger($intoSubEntrance);

	$Singer.setKey("undying", 0);
	$Rodriguez.setKey("undying", 0);
}
void rodLowerDoor()
{
	sys.trigger($intoSubEntrance);
}

/*
//-------------------------------------------------------------------------------
// void singerOffElevator()
//
// This moves Singer off the elevator and initiates dialog
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void singerOffElevator()
{
	if($Singer != $null_entity)
	{
		$Singer.setLeader($null_entity);
//		sys.println("Singer Moves");
		aiScriptedMoveWait($Singer, $target_null_llb_1, 16, 1);
//		sys.println("Singer Stops");
		if($Singer.distanceTo($target_null_llb_1) < 20)
		{
			aiScriptedAnimWait($Singer, "relax_idle_start", 4, 1);
			aiScriptedAnimWait($Singer, "idle_wrist_gui_start_fast", 4, 1);
			aiScriptedAnimLoop($Singer, "idle_wrist_gui_loop", 4);
			aiSpeakWait($Singer, "lipsync_vo_1_2_8_50_1");
			singerIntoPosition = 1;
			$Singer.startSound("snd_vo_1_2_8_50_2", SND_CHANNEL_ANY, false);
			aiScriptedAnimWait($Singer, "idle_wrist_gui_end_fast", 4, 1);
			aiScriptedAnimWait($Singer, "relax_idle_end", 4, 1);
			singerIsOffElevator = 1;
		}

		sys.waitFrame();
//		sys.println("set Singer Leader");
		$Singer.setLeader($player1);

	}

} //-------------- End void singerOffElevator ---------------

//-------------------------------------------------------------------------------
// void rodriguezOffElevator()
//
// This moves Rodriguez off the elevator and initiates dialog
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void rodriguezOffElevator()
{
	if($Rodriguez != $null_entity)
	{
		$Rodriguez.setLeader($null_entity);
//		sys.println("rod moves");
		aiScriptedMoveWait($Rodriguez, $target_null_llb_2, 16, 1);
//		sys.println("rod stops");

		if($Rodriguez.distanceTo($target_null_llb_2) < 20)
		{
			$Rodriguez.lookAt($player1);
//			sys.println("rod speaks");
			aiSpeakWait($Rodriguez, "lipsync_vo_1_2_8_51_1");
			rodriguezIsOffElevator = 1;
			sys.wait(.5);
			$Rodriguez.lookAt($null_entity);
		}
//		sys.println("set Rod Leader");
//		$Rodriguez.setLeader($player1);	
	}	

} //-------------- End void rodriguezOffElevator ---------------
*/

//-------------------------------------------------------------------------------
// void marinesOffElevator()
//
// Makes the marines that are on the elevator with the player (if any) step off the elevator. 
// This is called only when the elevator reaches the bottom floor.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void marinesOffElevator(entity ent)
{

	if(ent.getFloatKey("team") != 0)
		return;

	thread singerOffElevator();
	thread rodriguezOffElevator();

	sys.wait(1);

	$trigger_multiple_ulb_1.remove();

} //-------------- End void marinesOffElevator ---------------

//-------------------------------------------------------------------------------
// void singerIntoSe3()
//
// Moves Singer into Se3 with some vo and flashlight action.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
// mrenner - doesn't work.  As soon as the door opens, the get an enemy and go to ai.

void singerIntoSe3()
{
	if($Singer == $null_entity || !singerIsOffElevator)
		return;

	aiScriptedMoveWait($Singer, $target_null_se3_3, 16, 1);
	$Singer.flashlight(1);
	aiSpeak($Singer, "lipsync_vo_1_2_8_60_2");
	$Singer.setLeader($player1);

} //-------------- End void singerIntoSe3 ---------------

//-------------------------------------------------------------------------------
// void rodriguezIntoSe3()
//
// Moves Rodriguez into Se3 with some vo and flashlight action.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
// mrenner - doesn't work.  As soon as the door opens, the get an enemy and go to ai.

void rodriguezIntoSe3()
{
	if($Rodriguez == $null_entity || !rodriguezIsOffElevator)
		return;

	aiScriptedMoveWait($Rodriguez, $target_null_se3_4, 16, 1);
	$Rodriguez.flashlight(1);
	aiSpeak($Rodriguez, "lipsync_vo_1_2_8_60_1");
	$Rodriguez.setLeader($player1);

} //-------------- End void rodriguezIntoSe3 ---------------

//-------------------------------------------------------------------------------
// void marinesIntoSe3()
//
// This moves Singer and Rodriguez into Se3
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void singerFollowIntoSe3()
{
	sys.killthread( "map_building_b::singerOffElevator");
	sys.waitFrame();
	if($Singer != $null_entity)
	{
		$Singer.setLeader($player1);
	}
}
void rodFollowIntoSe3()
{
	sys.killthread( "map_building_b::rodriguezOffElevator");
	sys.waitFrame();
	if($Rodriguez != $null_entity)
	{
		$Rodriguez.setLeader($player1);
	}
}
void marinesIntoSe3()
{
//	thread singerIntoSe3();
//	thread rodriguezIntoSe3();	
	thread singerFollowIntoSe3();
	thread rodFollowIntoSe3();
	
} //-------------- End void marinesIntoSe3 ---------------

//-------------------------------------------------------------------------------
// void entityColorChange()
//
// Changes the color of an entity list.
//
// mekberg | Nov 2004
//-------------------------------------------------------------------------------
void entityColorChange(entity e, vector v)
{
	float i;

	// Go through all targets.
	for(i = 0; i < e.numTargets(); i++)
	{
		e.getTarget(i).setColor(v_x, v_y, v_z);
	}

} //-------------- End void entityColorChange ---------------

//-------------------------------------------------------------------------------
// void subEntrance03LightsOff()
//
// This turns the lights off in the sub entrance03 room.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void subEntrance03LightsOff()
{
	if(!se3LightsOn)
		return;

	se3LightsOn = 0;

	// First row.
	sys.trigger($speaker_se3_lights_off_1);
	$light_se3_1.Off();
	$func_lightbox_se3_1.setColor(0, 0, 0);
	$func_flare_se3_1.hide();

	$light_se3_2.Off();
	$func_lightbox_se3_2.setColor(0, 0, 0);
	$func_flare_se3_2.hide();

	$light_se3_7.Off();

	// Wait between rows.
	sys.wait(1);

	// Second row.
	sys.trigger($speaker_se3_lights_off_2);
	$light_se3_3.Off();
	$func_lightbox_se3_3.setColor(0, 0, 0);
	$func_flare_se3_3.hide();

	$light_se3_4.Off();
	$func_lightbox_se3_4.setColor(0, 0, 0);
	$func_flare_se3_4.hide();

	// Wait between rows.
	sys.wait(1);

	// Last row.
	sys.trigger($speaker_se3_lights_off_3);
	$light_se3_5.Off();
	$func_lightbox_se3_5.setColor(0, 0, 0);
	$func_flare_se3_5.hide();

	$light_se3_6.Off();
	$func_lightbox_se3_6.setColor(0, 0, 0);
	$func_flare_se3_6.hide();

	// Wait between rows.
	sys.wait(1);

	// Rest of the lights.
	sys.trigger($speaker_se3_lights_off_4);

} //-------------- End void subEntrance03LightsOff ---------------

//-------------------------------------------------------------------------------
// void subEntrance03LightsOn()
//
// This turns the lights on in the sub entrance03 room.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void subEntrance03LightsOn()
{
	// weak attempt to clean up the lights in the next room.
	sys.trigger($func_remove_1);

	if(se3LightsOn)
		return;

	se3LightsOn = 1;

	// First row.
	sys.trigger($speaker_se3_lights_on_1);
	$light_se3_1.On();
	$func_lightbox_se3_1.setColor(0.88, 0.95, 1);
	$func_flare_se3_1.show();

	$light_se3_2.On();
	$func_lightbox_se3_2.setColor(0.88, 0.95, 1);
	$func_flare_se3_2.show();

	$light_se3_fill1.setCurrentLightLevel(1);

	$light_se3_7.On();
/*
	// Wait between rows.
	sys.wait(1);

	// Second row.
	sys.trigger($speaker_se3_lights_on_2);
	$light_se3_3.On();
	$func_lightbox_se3_3.setColor(0.88, 0.95, 1);
	$func_flare_se3_3.show();


	$light_se3_4.On();
	$func_lightbox_se3_4.setColor(0.88, 0.95, 1);
	$func_flare_se3_4.show();

	$light_se3_fill1.setCurrentLightLevel(2);
*/
	// Wait between rows.
	sys.wait(1);

	// Last row.
	sys.trigger($speaker_se3_lights_on_3);
	$light_se3_5.On();
	$func_lightbox_se3_5.setColor(0.88, 0.95, 1);
	$func_flare_se3_5.show();

	$light_se3_6.On();
	$func_lightbox_se3_6.setColor(0.88, 0.95, 1);
	$func_flare_se3_6.show();

	$light_se3_fill1.setCurrentLightLevel(3);

	// Wait between rows.
	sys.wait(1);

	// Rest of the lights.
	sys.trigger($speaker_se3_lights_on_4);

	$light_se3_fill1.setCurrentLightLevel(4);

	entityColorChange($target_null_se3_5, '0.55 0.24 0.09');
	$corey_warning_light_9.remove();
	$light_se3_spinner_1.unbind();
	$light_se3_spinner_1.remove();

	// Initialization for the next room (se2)
	radioChatterPlayWait ($func_radiochatter_se3_2, "");

	$func_door_163.lock(0);
	$func_door_163.open();

	sys.wait(1);
	
	sys.trigger($ai_trigger_once_3);
	sys.trigger($monster_grunt_se2_1);
	sys.trigger($monster_strogg_marine_mgun_3);
	sys.trigger($monster_strogg_marine_se2_2);

} //-------------- End void subEntrance03LightsOn ---------------

//-------------------------------------------------------------------------------
// void subEntrance02LightsOff()
//
// This turns the lights off in the sub entrance02 room.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void subEntrance02LightsOff()
{
	if(!se2LightsOn)
		return;

	se2LightsOn = 0;

	// tether marines to the door.
//	sys.trigger($tetherBehindSe2Door);

	// First row.
	sys.trigger($speaker_se2_lights_off_1);
	$light_se2_1.Off();
	$func_lightbox_se2_1.setColor(0, 0, 0);
	$func_flare_se2_1.hide();

	$light_se2_2.Off();
	$func_lightbox_se2_2.setColor(0, 0, 0);
	$func_flare_se2_2.hide();

	// Wait between rows.
	sys.wait(1);

	// Second row.
	sys.trigger($speaker_se2_lights_off_2);
	$light_se2_3.Off();
	$func_lightbox_se2_3.setColor(0, 0, 0);
	$func_flare_se2_3.hide();

	$light_se2_4.Off();
	$func_lightbox_se2_4.setColor(0, 0, 0);
	$func_flare_se2_4.hide();

	// Wait between rows.
	sys.wait(1);

	// Third row.
	sys.trigger($speaker_se2_lights_off_3);
	$light_se2_5.Off();
	$func_lightbox_se2_5.setColor(0, 0, 0);
	$func_flare_se2_5.hide();

	$light_se2_6.Off();
	$func_lightbox_se2_6.setColor(0, 0, 0);
	$func_flare_se2_6.hide();

	// Wait between rows.
	sys.wait(1);

	// Fourth row.
	sys.trigger($speaker_se2_lights_off_4);
	$light_se2_7.Off();
	$func_lightbox_se2_7.setColor(0, 0, 0);
	$func_flare_se2_7.hide();

	$light_se2_8.Off();
	$func_lightbox_se2_8.setColor(0, 0, 0);
	$func_flare_se2_8.hide();

} //-------------- End void subEntrance02LightsOff ---------------

//-------------------------------------------------------------------------------
// void subEntrance02LightsOn()
//
// This turns the lights on in the sub entrance02 room.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void subEntrance02LightsOn()
{
	if(se2LightsOn)
		return;

	se2LightsOn = 1;

	// Remove door warning.
	if($trigger_once_se2_1 != $null_entity)
	{
		$trigger_once_se2_1.remove();
	}

	// First row.
	sys.trigger($speaker_se2_lights_on_1);
	$light_se2_1.On();
	$func_lightbox_se2_1.setColor(0.88, 0.95, 1);
	$func_flare_se2_1.show();

	$light_se2_2.On();
	$func_lightbox_se2_2.setColor(0.88, 0.95, 1);
	$func_flare_se2_2.show();

	$light_se2_fill1.setCurrentLightLevel(1);

	// Wait between rows.
	sys.wait(1);

	// Second row.
	sys.trigger($speaker_se2_lights_on_2);
	$light_se2_3.On();
	$func_lightbox_se2_3.setColor(0.88, 0.95, 1);
	$func_flare_se2_3.show();

	$light_se2_4.On();
	$func_lightbox_se2_4.setColor(0.88, 0.95, 1);
	$func_flare_se2_4.show();

	$light_se2_fill1.setCurrentLightLevel(2);

	// Wait between rows.
	sys.wait(1);

	// Third row.
	sys.trigger($speaker_se2_lights_on_3);
	$light_se2_5.On();
	$func_lightbox_se2_5.setColor(0.88, 0.95, 1);
	$func_flare_se2_5.show();

	$light_se2_6.On();
	$func_lightbox_se2_6.setColor(0.88, 0.95, 1);
	$func_flare_se2_6.show();

	$light_se2_fill1.setCurrentLightLevel(3);

	// Well done, Kane.
	sys.trigger($func_radiochatter_se2_3);

	// Wait between rows.
	sys.wait(1);

	// Fourth row.
	sys.trigger($speaker_se2_lights_on_4);
	$light_se2_7.On();
	$func_lightbox_se2_7.setColor(0.88, 0.95, 1);
	$func_flare_se2_7.show();

	$light_se2_8.On();
	$func_lightbox_se2_8.setColor(0.88, 0.95, 1);
	$func_flare_se2_8.show();

	$light_se2_fill1.setCurrentLightLevel(4);

	$light_5011.Off();

	entityColorChange($target_null_se2_1, '0.55 0.24 0.09');
	$corey_warning_light_10.remove();
	$light_5011.unbind();
	$light_5011.remove();

	// Wait between rows.
	sys.wait(1);

	sys.wait(2);

	subEntrance01Sequence();

} //-------------- End void subEntrance02LightsOn ---------------

void newberryOffTruck()
{
//	aiSpeak($Newberry, "lipsync_2");
	aiScriptedAnimWait($Newberry, "bld_b_jump_off_truck_fast", 4, 1);
}

void shawOffTruck()
{
	aiSpeak($Shaw, "lipsync_1");
	aiScriptedAnimWait($Shaw, "bld_b_jump_off_truck_fast", 4, 1);
}
void shawTalkOk()
{
	$Shaw.setTalkState(TALK_OK);
}
void marinesOffTruck()
{		
	$Newberry.unbind();
	thread newberryOffTruck();
	
	$Shaw.unbind();
	thread shawOffTruck();
}

/////////////////////////////////////////////////////////////////////
//  release other 2 guys if they are alive.
/////////////////////////////////////////////////////////////////////
void singerRelease()
{
	if($Singer != $null_entity)
	{
		$Singer.flashlight(1);
		$Singer.setLeader($null_entity);
	}
}
void rodRelease()
{
	if($Rodriguez != $null_entity)
	{
		$Rodriguez.flashlight(1);
		$Rodriguez.setLeader($null_entity);
	}
}
void overHereYell()
{
	aiSpeakWait($Newberry, "lipsync_2");

	while(1)
	{
		sys.wait(20 + sys.random(5));
		aiSpeakWait($Newberry, "lipsync_2");
	}
}

void overHere()
{
	thread overHereYell();
}

void noDownElevator()
{
//	sys.println("elevator enabled");
	// elevator in buiding_b that leads to the lower level.
	//$func_movator_30.setKey("gui_parm_disable", "1"); // the gui can't be clicked until this is set back to 0

	$func_movator_30.setGuiParm("noninteractive", "1"); // the gui can't be clicked until this is set back to 0
}

/////////////////////////////////////////////////////////////////////
//  Makes sure player has the welder following him out of the room //
/////////////////////////////////////////////////////////////////////
void updateNewberryObjectives()
{
	// Obj of getting through door is complete
	sys.trigger($OBJ_GetWelder_complete);
	sys.wait(5.5);
	
	// New objective to escort Newberry to the locked door.
	sys.trigger($OBJ_EscortNew);
}

void bigLiftOn()
{
	// elevator in buiding_b that leads to the lower level.
	//$func_movator_30.setKey("gui_parm_disable", "0"); // the gui can be clicked 

	$func_movator_30.setGuiParm("noninteractive", "0"); // the gui can't be clicked until this is set back to 0
	
}
void welder_access()
{
	sys.killthread( "map_building_b::overHereYell" );

	$Rodriguez.setTalkState(TALK_WAIT); 
	$Singer.setTalkState(TALK_WAIT); 

	$Shaw.setTalkState(TALK_OK); 

	sys.trigger($diableLiftGuiTrig);

	// release Newberry from tethers?
	sys.trigger($ai_tether_none_3);
	sys.waitFrame();

//	sys.println("setLeader for Newberry");
	$Newberry.setLeader($player1);
//	$Newberry.enableHeal();
	$Newberry.setTalkState(TALK_OK);	

	// unlock the door leading to the rest of the map that is in the foyer.
	$func_static_8463.setShaderParm(7, 1);		
	$func_door_99.lock(0);

	thread updateNewberryObjectives();

	aiSpeakWait($Newberry, "lipsync_1");

	$func_static_9251.setShaderParm(7, 1);
	$func_static_9252.setShaderParm(7, 1);
	$func_door_137.lock(0);
	
	// control room door
	$func_static_8469.setShaderParm(7, 0);
	$func_static_8470.setShaderParm(7, 0);
	$func_door_100.lock(1);

	// unlock door leading into lower subEntrance.
	$func_static_9264.setShaderParm(7, 1);
	$func_door_141.lock(0);
	
	$Voss.show();
	$Strassa.show();
	$Sledge.show();
	$door_guard_1.show();
	
	// hurt_marine is now dead and the body bag is placed there in his place.
	$bodyBag.show();	
	$medic_1.remove();
	$hurt_marine.remove();
	
	// save game
	sys.trigger($func_savegame_2);
}

// not used, but put the function in anyway.		mrenner
void se1LightsOff()
{
	entityColorChange($target_null_se1_lightboxes, '0 0 0');
	
	$se1LightBox1aFlare.hide();
	$se1LightBox1bFlare.hide();
	sys.trigger($se1Light1a);
	sys.trigger($se1Light1b);

	$se1LightBox2aFlare.hide();
	$se1LightBox2bFlare.hide();
	sys.trigger($se1Light2a);
	sys.trigger($se1Light2b);

	$se1LightBox3aFlare.hide();
	$se1LightBox3bFlare.hide();
	sys.trigger($se1Light3a);
	sys.trigger($se1Light3b);

	$se1LightBox4aFlare.hide();
	$se1LightBox4bFlare.hide();
	sys.trigger($se1Light4a);
	sys.trigger($se1Light4b);

	$se1LightBox5aFlare.hide();
	$se1LightBox5bFlare.hide();
	sys.trigger($se1Light5a);
	sys.trigger($se1Light5b);

	$se1LightBox6aFlare.hide();
	$se1LightBox6bFlare.hide();
	sys.trigger($se1Light6a);
	sys.trigger($se1Light6b);

	$se1LightBox7aFlare.hide();
	$se1LightBox7bFlare.hide();
	sys.trigger($se1Light7a);
	sys.trigger($se1Light7b);

//	$se1LightBox8aFlare.hide();
//	$se1LightBox8bFlare.hide();
//	sys.trigger($se1Light8a);
//	sys.trigger($se1Light8b);

	$se1LightBox9aFlare.hide();
	$se1LightBox9bFlare.hide();
	sys.trigger($se1Light9a);
	sys.trigger($se1Light9b);

//	$se1LightBox10aFlare.hide();
//	$se1LightBox10bFlare.hide();
//	sys.trigger($se1Light10a);
//	sys.trigger($se1Light10b);

	$se1LightBox11aFlare.hide();
	$se1LightBox11bFlare.hide();
	sys.trigger($se1Light11a);
	sys.trigger($se1Light11b);
}
	
void se1LightsOn()
{
	sys.trigger($se1_lights_on_11);
	$se1LightBox11a.setColor(0.88, 0.95, 1);
	$se1LightBox11b.setColor(0.88, 0.95, 1);
	$se1LightBox11aFlare.show();
	$se1LightBox11bFlare.show();
	sys.trigger($se1Light11a);
	sys.trigger($se1Light11b);
	$light_se1_fill_second.setCurrentLightLevel(1);

//	sys.wait(.5);

//	sys.trigger($se1_lights_on_10);
//	$se1LightBox10a.setColor(0.88, 0.95, 1);
//	$se1LightBox10b.setColor(0.88, 0.95, 1);
//	$se1LightBox10aFlare.show();
//	$se1LightBox10bFlare.show();
//	sys.trigger($se1Light10a);
//	sys.trigger($se1Light10b);
	$light_se1_fill_second.setCurrentLightLevel(2);

	sys.wait(.5);

	sys.trigger($se1_lights_on_9);
	$se1LightBox9a.setColor(0.88, 0.95, 1);
	$se1LightBox9b.setColor(0.88, 0.95, 1);
	$se1LightBox9aFlare.show();
	$se1LightBox9bFlare.show();
	sys.trigger($se1Light9a);
	sys.trigger($se1Light9b);
	// big red light
	sys.trigger($light_se1_wfill1);
	sys.trigger($light_se1_wfill2);
	$light_se1_fill_second.setCurrentLightLevel(3);

//	sys.wait(.5);

//	sys.trigger($se1_lights_on_8);
//	$se1LightBox8a.setColor(0.88, 0.95, 1);
//	$se1LightBox8b.setColor(0.88, 0.95, 1);
//	$se1LightBox8aFlare.show();
//	$se1LightBox8bFlare.show();
//	sys.trigger($se1Light8a);
//	sys.trigger($se1Light8b);
	$light_se1_fill_second.setCurrentLightLevel(4);

	sys.wait(.5);

	sys.trigger($se1_lights_on_7);
	$se1LightBox7a.setColor(0.88, 0.95, 1);
	$se1LightBox7b.setColor(0.88, 0.95, 1);
	$se1LightBox7aFlare.show();
	$se1LightBox7bFlare.show();
	sys.trigger($se1Light7a);
	sys.trigger($se1Light7b);
	$light_se1_fill_first.setCurrentLightLevel(1);
	$light_se1_fill_second.setCurrentLightLevel(5);
	
//	sys.wait(.5);
	
//	sys.trigger($se1_lights_on_6);
//	$se1LightBox6a.setColor(0.88, 0.95, 1);
//	$se1LightBox6b.setColor(0.88, 0.95, 1);
//	$se1LightBox6aFlare.show();
//	$se1LightBox6bFlare.show();
//	sys.trigger($se1Light6a);
//	sys.trigger($se1Light6b);
	$light_se1_fill_first.setCurrentLightLevel(2);
	
	sys.wait(.5);

	sys.trigger($se1_lights_on_5);
	$se1LightBox5a.setColor(0.88, 0.95, 1);
	$se1LightBox5b.setColor(0.88, 0.95, 1);
	$se1LightBox5aFlare.show();
	$se1LightBox5bFlare.show();
	sys.trigger($se1Light5a);
	sys.trigger($se1Light5b);
	$light_se1_fill_first.setCurrentLightLevel(3);

//	sys.wait(.5);

//	sys.trigger($se1_lights_on_4);
//	$se1LightBox4a.setColor(0.88, 0.95, 1);
//	$se1LightBox4b.setColor(0.88, 0.95, 1);
//	$se1LightBox4aFlare.show();
//	$se1LightBox4bFlare.show();
//	sys.trigger($se1Light4a);
//	sys.trigger($se1Light4b);
	// big red light
	sys.trigger($light_se1_wfill3);
	$light_se1_fill_first.setCurrentLightLevel(4);

	sys.wait(.5);

	sys.trigger($se1_lights_on_3);
	$se1LightBox3a.setColor(0.88, 0.95, 1);
	$se1LightBox3b.setColor(0.88, 0.95, 1);
	$se1LightBox3aFlare.show();
	$se1LightBox3bFlare.show();
	sys.trigger($se1Light3a);
	sys.trigger($se1Light3b);
	$light_se1_fill_first.setCurrentLightLevel(5);

//	sys.wait(.5);

//	sys.trigger($se1_lights_on_2);
//	$se1LightBox2a.setColor(0.88, 0.95, 1);
//	$se1LightBox2b.setColor(0.88, 0.95, 1);
//	$se1LightBox2aFlare.show();
//	$se1LightBox2bFlare.show();
//	sys.trigger($se1Light2a);
//	sys.trigger($se1Light2b);
	$light_se1_fill_first.setCurrentLightLevel(6);
	
	sys.wait(.5);
	
	sys.trigger($se1_lights_on_1);
	$se1LightBox1a.setColor(0.88, 0.95, 1);
	$se1LightBox1b.setColor(0.88, 0.95, 1);
	$se1LightBox1aFlare.show();
	$se1LightBox1bFlare.show();
	sys.trigger($se1Light1a);
	sys.trigger($se1Light1b);
	$light_se1_w09.hide();
	$light_se1_w10.hide();
	$light_se1_fill_first.setCurrentLightLevel(7);	
	
	//entityColorChange($se1RedLights, '0.55 0.24 0.09');
	entityColorChange($se1RedLights, '0 0 0');
}
void spawnNewberry()
{
	$welder.hide();
	aiScriptedAnimLoop($Newberry, "bld_b_ride_on_truck", 4);	
}
void truckRadioChatter()
{
	radioChatterPlayWait ($func_radiochatter_se1_1, "");

	$func_door_162.lock(0);
	$func_door_162.open();

	sys.wait(1);
	radioChatterPlayWait ($func_radiochatter_se1_2, "");
	radioChatterPlayWait ($func_radiochatter_se1_3, "");
}
//-------------------------------------------------------------------------------
// void subEntrance01Sequence()
//
// This is the sequence in sub entrance 1 including the truck movement, spawners, and guys jumping off the truck.
//
// mekberg | Oct 2004		mrenner
//-------------------------------------------------------------------------------
void truckStop()
{
	playAnimWait($Hover_truck, ANIMCHANNEL_ALL, "hover_stop_1");
}
void truckAnim()
{
	thread truckStop();
	sys.wait(3.75);
	$Hover_truck.startSound("vehicle_hovertruck_idle", SND_CHANNEL_ANY, false);	
	$trigger_hurt_se1_1.remove();
	$trigger_hurt_se1_2.remove();
	$trigger_hurt_se1_3.remove();
	$truckBumper.remove();
	sys.waitFrame();
	sys.wait(1);
	thread marinesOffTruck();
}
void subEntrance01Sequence()
{
	thread truckRadioChatter();

	sys.trigger($Newberry);
	sys.wait(.1);
	aiScriptedAnimLoop($Shaw, "bld_b_ride_on_truck", 4);

	sys.wait(3);

	sys.trigger($truckVsStroggTrig);

	sys.wait(1);

	thread truckAnim();

	sys.wait(1);

	thread se1LightsOn();

	// tether and spawner kicking out more strogg
	sys.trigger($startHoverBattle);

	sys.wait(3);
	thread singerRelease();
	thread rodRelease();
} //-------------- End void subEntrance01Sequence ---------------

//-------------------------------------------------------------------------------
// void checkForWelderAccess()
//
// Checks to see if the player has the welder with him. If so, it plays the appropriate sounds.
// This is called by $trigger_multiple_1 near the locked door at spawn.
// After this function is called the trigger is removed.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void checkForWelderAccess()
{

	if($player1 == $Newberry.getLeader())
	{
		// spawn the 2 marines at the end of the hall
		sys.trigger($startled_marine_02);
		sys.trigger($startled_marine_03);
	
		$door_guard_1.setTalkState(TALK_BUSY); 
		aiScriptedAnim($door_guard_1, "bld_b_marine_entrance_L", 4, true);
		
		$trigger_multiple_1.remove();

		// Allow the welder to be killed.
		$Newberry.setKey("noDamage", 0);
		sys.trigger($newberryPassive);
	
		// Lock the door to the loading bays.
		$func_static_9251.setShaderParm(7, 0);
		$func_static_9252.setShaderParm(7, 0);
		$func_door_137.lock(1);

		// Remove Voss' warning.
		//$trigger_once_llb_1.remove();

		// Remove the marines down below
		if($Shaw != $null_entity)
			$Shaw.remove();

		if($Singer != $null_entity)
			$Singer.remove();

		if($Rodriguez != $null_entity)
			$Rodriguez.remove();
	}

} //-------------- End void checkForWelderAccess ---------------

//-------------------------------------------------------------------------------
// void enableSaveTheMarinesTriggers()
//
// Enables all triggers for the save the marines mission.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void enableSaveTheMarinesTriggers()
{	
	sys.trigger($trigger_once_foyer_4);
	sys.trigger($trigger_once_foyer_6);
	sys.trigger($trigger_once_ulb_1);
	sys.trigger($trigger_once_ulb_2);
	sys.trigger($trigger_once_foyer_5);

} //-------------- End void enableSaveTheMarinesTriggers ---------------

//-------------------------------------------------------------------------------
// void sledgeSpeaksSecondPass()
//
// Sledge speaks to the player again. Introduces other players.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void sledgeSpeaksSecondPass()
{
	aiSpeakWait($Sledge, "lipsync_vo_1_2_10_10_1");
	sys.wait(.5);
	aiSpeakWait($OConnell, "lipsync_vo_1_2_10_10_2");
	aiSpeakWait($Dodge, "lipsync_vo_1_2_10_10_3");
	sys.wait(1);
	aiSpeakWait($Sledge, "lipsync_vo_1_2_10_10_4");

} //-------------- End void sledgeSpeaksSecondPass ---------------

//-------------------------------------------------------------------------------
// void foyerSequenceSecondPass()
//
// This is the second pass of the foyer sequence. Mainly for Save the Marines vo.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void foyerSequenceSecondPass()
{
	// Lock the door from the BringDownTheGates mission
	$func_door_99.lock(1);

	aiSpeakWait($Voss, "lipsync_vo_1_2_10_20_1");

	sys.wait(.5);

	sys.trigger($func_radiochatter_f_2);

	sys.wait(3.5);

	aiSpeakWait($Strassa, "lipsync_vo_1_2_10_20_3");

	sys.wait(.5);

	sys.trigger($func_radiochatter_f_3);

	sys.wait(5.5);

	aiSpeakWait($Voss, "lipsync_vo_1_2_10_20_5");

	sys.wait(.5);

	sys.trigger($func_radiochatter_f_4);

	sys.wait(4.5);

	aiSpeakWait($Voss, "lipsync_vo_1_2_10_20_7");

	$Dodge.setTalkState(TALK_FOLLOW );
	$OConnell.setTalkState(TALK_FOLLOW);

	$func_static_9251.setShaderParm(7, 1);
	$func_static_9252.setShaderParm(7, 1);
	$func_door_137.lock(0);


} //-------------- End void foyerSequenceSecondPass ---------------

//-------------------------------------------------------------------------------
// void preUpperLoadingBaySequenceSecondPass()
//
// This is the second pass for the pre-upper loading bay. Shellshocked marine.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void preUpperLoadingBaySequenceSecondPass()
{
	aiScriptedAnimLoop($char_marine_ulb_1, "bld_b_shellshocked", 4);	

} //-------------- End void preUpperLoadingBaySequenceSecondPass ---------------


//-------------------------------------------------------------------------------
// void upperLoadingBaySequenceSecondPass()
//
// This is the second pass for the upper loading bay. Shellshocked marine and vo.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void upperLoadingBaySequenceSecondPass()
{
	aiScriptedAnimLoop($char_marine_ulb_1, "bld_b_shellshocked_talk", 4);
	aiSpeakWait($char_marine_ulb_1, "lipsync_vo_1_2_10_40_1");
	sys.wait(1);
	aiSpeakWait($char_marine_ulb_1, "lipsync_vo_1_2_10_41_1");
	sys.wait(1);
	aiSpeakWait($char_marine_ulb_1, "lipsync_vo_1_2_10_41_2");
	sys.wait(1);
	aiSpeakWait($char_marine_ulb_1, "lipsync_vo_1_2_10_41_3");
	aiScriptedAnimLoop($char_marine_ulb_1, "bld_b_shellshocked", 4);

} //-------------- End void upperLoadingBaySequenceSecondPass ---------------

//-------------------------------------------------------------------------------
// void elevatorSequence()
//
// This is the sequence that starts an explosion followed by vo.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void elevatorSequence()
{
	aiSpeakWait($Dodge, "lipsync_vo_1_2_10_60_1");
	sys.wait(.5);
	aiSpeakWait($OConnell, "lipsync_vo_1_2_10_60_2");
	sys.wait(.5);
	sys.trigger($func_radiochatter_ulb_1);
	sys.wait(7);
	sys.trigger($func_radiochatter_ulb_2);

} //-------------- End void elevatorSequence ---------------

//-------------------------------------------------------------------------------
// void lowerLoadingBaySequence()
//
// This starts all of the mayhem in the lower levels once the player has brought down the gates.
// Called by the trigger_multiple_llb_1 in the elevator shaft between upper and lower loading bays.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void lowerLoadingBaySequence()
{
	if(!bringDownTheGates)
		return;

	// Remove the trigger that triggered this function.
	$trigger_multiple_llb_1.remove();

	// Show the marine messing with the gui.
	$building_b_char_marine_llb_1.show();
	$building_b_char_marine_llb_1.scriptedAnim("bld_b_gui_guy_loop", 1, 1, 1);

	// Lock the door to the sub entrance.
	$func_door_141.lock(1);
	$func_static_9265.setShaderParm(7, 0);
	
	// Unlock the door to lower generator room.
	$func_door_150.lock(0);
	$func_static_9282.setShaderParm(7, 1); 

	// Trigger the strogg in the adjacent generator room.
	sys.trigger($monster_strogg_marine_lgr_1);
	sys.trigger($monster_strogg_marine_lgr_2);

} //-------------- End void lowerLoadingBaySequence ---------------

//-------------------------------------------------------------------------------
// void removeCoolantRoomObs()
//
// Removes the coolant room aas obstacle so the marines can move across the bridge.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void removeCoolantRoomObs()
{
	sys.trigger($func_aas_obstacle_cr_1);
	sys.trigger($func_aas_obstacle_cr_2);

	$func_aas_obstacle_cr_1.remove();

} //-------------- End void removeCoolantRoomObs ---------------

//-------------------------------------------------------------------------------
// void removeCoolantRoomSpawner()
//
// Removes the coolant room spawner. Called from a trigger near the spawn points.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void removeCoolantRoomSpawner()
{
	// Spawner removed via trigger now.
	// This creates an earthquake and triggers vo.
	
	removeCoolantRoomObs();

	sys.trigger($func_earthquake_cr_1);
	sys.wait(2);
	aiSpeakWait($Dodge, "lipsync_vo_1_2_10_90_1");
	sys.wait(.5);
	aiSpeakWait($OConnell, "lipsync_vo_1_2_10_90_2");

} //-------------- End void removeCoolantRoomSpawner ---------------

//-------------------------------------------------------------------------------
// void lowerGateAccessSequence()
//
// Makes Morris wave at player and initiates vo.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void lowerGateAccessSequence()
{
	aiScriptedAnim($Morris, "bld_b_over_here", 4, 1);
	aiSpeakWait($Morris, "lipsync_vo_1_2_10_110_1");

} //-------------- End void lowerGateAccessSequence ---------------

//-------------------------------------------------------------------------------
// lowerGateAccessAfterBattle()
//
// After the battle and the platform collapses.
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void lowerGateAccessAfterBattle()
{
	aiSpeakWait($Morris, "lipsync_vo_1_2_10_110_2");

} //-------------- End lowerGateAccessAfterBattle ---------------

//-------------------------------------------------------------------------------
// void lowerGateAccessMorrisConvo()
//
// Convo with Morris
//
// mekberg | Oct 2004
//-------------------------------------------------------------------------------
void lowerGateAccessMorrisConvo()
{
	$Morris.setTalkState(TALK_FOLLOW );
	$Morris.setLeader($player1);
	$building_b_char_marine_lga_1.setTalkState(TALK_FOLLOW );
	$building_b_char_marine_lga_1.setLeader($player1);	
//	sys.println("Morris is following the player");

} //-------------- End void lowerGateAccessMorrisConvo ---------------

//////////////////////////////////////////////////////////
//	Welding door, lights go out		//////////
//////////////////////////////////////////////////////////
/*
void testing()
{
//	sys.println("move newberry");
	sys.trigger($Newberry);
	$Newberry.unbind();
	aiScriptedStop($Newberry);
	sys.waitFrame();
	
	// move the rhodes to the testing position.
	$Newberry.setWorldOrigin( $ai_tether_radius_38.getWorldOrigin());
	$Newberry.setAngles ( '0 270 0' );
}
*/
void Weld_guard()
{
//	sys.println("Grunt jumps down.");
	aiScriptedAnim ( $monster_grunt_3, "attack_mar", 0, true );		// the grunt that jumps on a marine.
	$barrel_drop.remove();
	sys.wait(.1);
	$falling_barrel_1.applyImpulse($falling_barrel_1,$falling_barrel_1.getWorldOrigin(),'0 0 100');
	$falling_barrel_2.applyImpulse($falling_barrel_2,$falling_barrel_2.getWorldOrigin(),'0 0 100');
	sys.wait(3);
	$Newberry.setHealth(1);
	$Newberry.setEnemy ( $monster_grunt_3 );
	$monster_grunt_3.setEnemy ( $Newberry );
	sys.trigger($ai_become_aggressive_2);
	sys.wait(1);
	$stop_player_2.remove();
	$Newberry.setTalkState(TALK_OK);
	
	$tackleDead.show();
	
	// tether marines in the previous room to you.
	sys.trigger($stoogTrig);
}

void Floor2HorizontalShafts()
{
	$floor2HorizontalShaft1.time(2);
	$floor2HorizontalShaft1.accelTime(1);
	$floor2HorizontalShaft1.decelTime(.5);

	$floor2HorizontalShaft2.time(2);
	$floor2HorizontalShaft2.accelTime(1);
	$floor2HorizontalShaft2.decelTime(.5);

	while(1)
	{
		$floor2HorizontalShaft1Spinner.time(3);
		$floor2HorizontalShaft1Spinner.accelTime(2);
		$floor2HorizontalShaft2Spinner.time(3);
		$floor2HorizontalShaft2Spinner.accelTime(2);

		// shafts spin
		$floor2HorizontalShaft1Spinner.rotate('90 0 0');
		$floor2HorizontalShaft2Spinner.rotate('90 0 0');
		sys.wait(8 + sys.random(2));
		$floor2HorizontalShaft1Spinner.stopRotating();
		$floor2HorizontalShaft2Spinner.stopRotating();
		
		// retract shafts into wall
		
		$floor2HorizontalShaft1.move(SOUTH, 220);
		$floor2HorizontalShaft2.move(SOUTH, 220);

		//sys.trigger($floor2HorizontalShaft1_fx);
		//sys.trigger($floor2HorizontalShaft2_fx);

		$floor2HorizontalShaft1.setKey("snd_move", "horizontal_piston_out");
		$floor2HorizontalShaft2.setKey("snd_move", "horizontal_piston_out");

		sys.waitFor($floor2HorizontalShaft2);
			
		sys.wait(8 + sys.random(2));
				
		// extend shafts out from wall
		$floor2HorizontalShaft1.move(NORTH, 220);
		$floor2HorizontalShaft2.move(NORTH, 220);

		$floor2HorizontalShaft1.setKey("snd_move", "horizontal_piston_in");
		$floor2HorizontalShaft2.setKey("snd_move", "horizontal_piston_in");

		sys.wait(1.25);

		//sys.trigger($floor2HorizontalShaft1_fx);
		//sys.trigger($floor2HorizontalShaft2_fx);
		sys.waitFor($floor2HorizontalShaft2);
		sys.wait(.25);
	}
}

void MoveFloor1HShaft(entity floor1Shaft, entity shaftFx)
{
	floor1Shaft.setKey("snd_move", "horizontal_piston_out");
	floor1Shaft.move(NORTH, 200);
	sys.trigger(shaftFx);
	sys.waitFor(floor1Shaft);
	floor1Shaft.setKey("snd_move", "horizontal_piston_in");
	sys.wait(3);
	floor1Shaft.move(SOUTH, 200);
	sys.wait(1);
	sys.trigger(shaftFx);
}

void Floor1HorizontalShafts()
{
	$floor1HorizontalShaft1.time(2);
	$floor1HorizontalShaft2.time(2);
	$floor1HorizontalShaft3.time(2);
	
	while(1)
	{
		sys.wait(8 + sys.random(4));

		if (sys.random(1) > 0.5)
		{
			thread MoveFloor1HShaft($floor1HorizontalShaft1, $floor1HorizontalShaft1_fx);
			sys.wait(1.0);
			thread MoveFloor1HShaft($floor1HorizontalShaft3, $floor1HorizontalShaft3_fx);
			sys.wait(1.0);
			thread MoveFloor1HShaft($floor1HorizontalShaft2, $floor1HorizontalShaft2_fx);
			sys.wait(1.0);
		}

		else
		{
			thread MoveFloor1HShaft($floor1HorizontalShaft3, $floor1HorizontalShaft3_fx);
			sys.wait(1.0);
			thread MoveFloor1HShaft($floor1HorizontalShaft1, $floor1HorizontalShaft1_fx);
			sys.wait(1.0);
			thread MoveFloor1HShaft($floor1HorizontalShaft2, $floor1HorizontalShaft2_fx);
		}
	}
}

void InitShaftBindings()
{
	$floor2HorizontalShaft1Spinner.bind($floor2HorizontalShaft1);
	$floor2HorizontalShaft2Spinner.bind($floor2HorizontalShaft2);
}

/////////////////////////////////////////////////////////////////////
//  Lights go out in room and strogg sounds heard              /// //
/////////////////////////////////////////////////////////////////////
void barrels_go_boom()
{
	sys.wait(2);
	sys.trigger($barrel_blast);
	sys.trigger($slowsmoke);
//	$id_barrel_1.applyImpulse($id_barrel_1,$id_barrel_1.getWorldOrigin(),'0 10000 -159900');
	$id_barrel_2.applyImpulse($id_barrel_2,$id_barrel_2.getWorldOrigin(),'0 0 -159900');
	$id_barrel_3.applyImpulse($id_barrel_3,$id_barrel_3.getWorldOrigin(),'0 0 -150000');
}

void medicYell01()
{
	aiSpeakWait( $medic_1, "lipsync_1" );
//	sys.println("line1 done");
	aiSpeakWait( $medic_1, "lipsync_2" );
//	sys.println("line2 done");
}
void medicMoves()
{
	$medic_1.setTalkState(TALK_OK);	
	aiScriptedAnimWait($medic_1, "bld_b_medic_yells", 4, true );
}
void medic_event()
{
	thread medicMoves();
	$hurt_marine.startSound("snd_marine_writhe", SND_CHANNEL_ANY, false);
	$hurt_marine.setTalkState(TALK_WAIT);
	aiScriptedAnimWait ( $hurt_marine, "bld_b_wounded_marine_reaching", 4, false );
	aiScriptedAnimLoop ( $hurt_marine, "bld_b_wounded_marine_loop_b", 0 );
}

/////////////////////////////////////////////////
//	Control Room-Monitors come down		////////////////////////
////////////////////////////////////////////////


void pullDown()
{
	sys.trigger($monitor_light);
	sys.wait(1);

	$m_pike.time(.1);
	$m_pike.move(UP, 44);
	sys.trigger($spike_short);	//snd
	sys.waitFor($m_pike);

	sys.wait(0.3);
	$m_pike.time(2);
	$m_pike.rotateOnce('0 -540 0');
	$m_pike.move(UP, 292);
	sys.trigger($spike_long);	//snd
	sys.waitFor($m_pike);	

	sys.wait(1);
	$m_pike.time(5);
	$m_pike.rotateOnce('0 -360 0');
	$m_pike.move(DOWN, 248);
	sys.trigger($monitor_down);	//snd

	$m_base.time(5);
	$m_base.rotateOnce('0 -360 0');
	$m_base.move(DOWN, 248);

	sys.wait(1.5);
	sys.trigger($base_steam_01);
	sys.trigger($base_steam_02);
	sys.wait(3.5);
	$base_steam_01.remove();
	$base_steam_02.remove();
	sys.trigger($monitor_light);

	sys.waitFor($m_pike);

	$m_screen_3.setGuiParm("noninteractive", "0"); // the gui can't be clicked until this is set back to 0

	sys.wait(.5);
	$monitor_light.remove();
		
	$m_pike.time(2);
	$m_pike.move(DOWN, 88);
	sys.trigger($spike_down);	//snd
	$m_pike.rotateOnce('0 -90 0');
	sys.waitFor($m_pike);
}

void lights_out_1()
{
	thread gen_eng_01_shake();
	thread gen_eng_02_shake();

	thread barrels_go_boom();
	$scared_guy_1.show();
	$scared_guy_2.show();
	$scared_guy_3.show();
	aiScriptedAnim ($scared_guy_1, "bld_b_lights_out1", 4, true );
	aiScriptedAnim ($scared_guy_2, "bld_b_lights_out2", 4, true );
	aiScriptedAnim ($scared_guy_3, "bld_b_lights_out3", 4, true );
	sys.wait(1.5);
	sys.trigger($big_boom);
	sys.wait(.3);

	sys.trigger($fadeOutRelay);
	sys.wait(1);
	$panel_dropper.remove();
	$panel.applyImpulse($panel,$panel.getWorldOrigin(),'0 0 -1');
	sys.wait(8.87);
	sys.trigger($fadeInRelay);

}

void dragged_event()
{	
	$gun_jammed.remove();
	$dragged_marine.show();
	aiScriptedAnimWait ($dragged_marine, "bld_b_dragged", 4, true );
	$dragged_marine.remove();
	sys.trigger($draggedDoor);
	sys.wait(3);
	$draggedDoor.lock(1);
	sys.trigger($mad_strogg_01);
}

//////////////////////////////////////////////////////////////////////////////////////////
//	Throwing Marines by either a Strogg or an explosion	////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////

void ChuckBody1()
{
	sys.trigger($rip_event_trigger);
	sys.wait(.5);
	sys.trigger($grunt_growl);		//grunt yelling
	sys.wait(.2);
	sys.trigger($marine_scream_01);		// marine screaming
	sys.wait(.4);
	$forced_marine_1.show();
	sys.wait(.1);
	$forced_marine_1.applyImpulse($forced_marine_1,$forced_marine_1.getWorldOrigin(),'0 200000 20000');
	sys.trigger($forced_steam_01);
	sys.trigger($forcebody_snd_01);		// body hitting the wall
	sys.wait(.2);
//	$guy_throw_1.applyImpulse($guy_throw_1,$guy_throw_1.getWorldOrigin(),'0 -50000 0');
//	$guy_throw_2.applyImpulse($guy_throw_2,$guy_throw_2.getWorldOrigin(),'0 -5000 0');
//	$guy_throw_3.applyImpulse($guy_throw_3,$guy_throw_3.getWorldOrigin(),'0 -50000 0');

	$guy_throw_1.applyImpulse($guy_throw_1,$guy_throw_1.getWorldOrigin(),'0 -100000 20000');
	$guy_throw_2.applyImpulse($guy_throw_2,$guy_throw_2.getWorldOrigin(),'0 -10000 20000');
	$guy_throw_3.applyImpulse($guy_throw_3,$guy_throw_3.getWorldOrigin(),'0 -100000 20000');

	sys.waitFrame();
	sys.trigger($grunt_chucker_1);

	$halfGuy01.show();
	$halfGuyBlood.show();	
	
	$env_ragdoll_marine_fullgear_3.show();
	$env_ragdoll_marine_fullgear_4.show();
	$env_ragdoll_marine_fullgear_0.show();
	$env_ragdoll_marine_fullgear_1.show();

	sys.trigger($gruntBarrelTether);

//	aiScriptedMove ($grunt_chucker_1, $grunt_point, 16, true );
}

void gruntRoom()
{
	$func_static_8544.setShaderParm(7, 1);
	$ammo_nailgun_11.show();
	$ammo_nailgun_12.show();
	
	// grunt eating room
	$moveable_item_machinegun_4.show();
	$moveable_item_machinegun_5.show();
	
	// shells
	$func_static_53867.show();
	$func_static_53868.show();
	$func_static_53869.show();
	$func_static_53870.show();
	$func_static_53871.show();
	
	$moveable_marine_helmet_2.show();
	$moveable_marine_helmet_3.show();

}

void bodyDrop()
{
	$deadLeffler.show();
	$deadLeffler.applyImpulse($deadLeffler,$deadLeffler.getWorldOrigin(),'0 -100000 0');
}

/////////////////////////////////////////////////////
//	the gate is down	/////////////////////
/////////////////////////////////////////////////////
void lowerLift()
{
	$func_static_9119.setShaderParm(7, 1);
	sys.trigger($func_door_1118);	

	sys.trigger($monster_strogg_marine_mgun_1);
	sys.trigger($monster_strogg_marine_mgun_2);
}
void Gatesdown()
{
	// Defense Grid down
	sys.trigger($OBJ_DownFences_complete);

	sys.trigger($knock_trigger);
	
	sys.trigger($grunt_attack_trigger);
	$grunt_attack_trigger.setKey("facing", "1");
	bringDownTheGates = 1;
}

void Startpumping()
{

	$piston_1.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(2);
	$piston_2.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(1);
	$piston_3.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(2);
	$piston_4.playCycle(ANIMCHANNEL_ALL, "cycle");
	$piston_5.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(.5);
	$piston_6.playCycle(ANIMCHANNEL_ALL, "cycle");
}

void Startpumping_2()
{
	$piston_7.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(2);
	$piston_8.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(1);
	$piston_9.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(.2);
	$piston_10.playCycle(ANIMCHANNEL_ALL, "cycle");
	InitShaftBindings();
//	thread Floor1HorizontalShafts();
	thread Floor2HorizontalShafts();
}

///////////////////////////////////////////////////////////////
//	Grunt smashing glass and scaring the marine  //////////
///////////////////////////////////////////////////////////////
void startledByGrunt()
{
	aiScriptedAnimLoop ( $startled_marine_02, "relax_idle", 0 );
	aiScriptedAnimLoop ( $startled_marine_03, "relax_idle", 0 );
}
void startledMarine02()
{
	aiScriptedAnimWait ( $startled_marine_02, "bld_b_startled_gnt_button", 4, true );		// the marine by the window
	$startled_marine_03.lookAt($light_3803);
	aiScriptedMoveWait( $startled_marine_02, $startledMarine1, 16, 1 );	
	$startled_marine_02.setTalkState(TALK_OK);
	aiScriptedFaceWait ( $startled_marine_02, $light_3803, false );	
}
void startledMarine03()
{
	aiScriptedAnimWait ( $startled_marine_03, "bld_b_startled_gnt2", 4, true );
	$startled_marine_03.lookAt($light_3803);
	aiScriptedMoveWait( $startled_marine_03, $startledMarine2, 16, 1 );	
	aiScriptedFaceWait ( $startled_marine_03, $light_3803, false );	
}
void GoGruntGo()
{
	sys.trigger($glass_grunt);
	$glass_grunt.show();
	sys.wait(.1);
	aiScriptedAnim ( $glass_grunt, "building_b", 4, false );		// the grunt smashing up against the glass.
	sys.wait(.5);
	thread startledMarine02();
	thread startledMarine03();
	
	sys.trigger($aggressiveNewberry);

	sys.wait(3.7);

	sys.trigger($blast_door_snd);
	$blast_door.time(.5);
	$blast_door.move(DOWN, 94);
	sys.waitFor($blast_door);
	
	sys.wait(1);
	$glass_grunt.remove();
	sys.wait(1);
	sys.trigger($glass_snd);
	sys.wait(1);
	sys.trigger($pounding_snd_1);
	sys.wait(2);
	sys.trigger($pounding_snd_1);
	sys.trigger($mad_glass_grunt);
}

void ChuckBody3()	// Marine runs down the hall and gets thrown by an explosion.
{

	sys.trigger($hall_marine);
	sys.wait(1);

	aiScriptedMove ( $hall_marine, $hall_point, 16, true );

	sys.wait(4.5);

	//sys.trigger($hall_grunt);
	$hall_marine.becomeRagdoll();
	sys.trigger($forcefield_hall);
	//sys.trigger($hall_ex);

	sys.wait(.2);

	sys.trigger($forcebody_snd_01);		// body hitting the wall
	$forcefield_hall.remove();

	sys.trigger($func_door_109);		// unlocked the door at the end of the hall.

}

void redLightsOff2()
{
// doesn't do much of what it used to do.
	$func_static_8556.setShaderParm(7, 0);
	$func_static_8555.setShaderParm(7, 0);
	$func_door_114.lock(1);
/*
	sys.trigger($door_130_toggle);
	sys.trigger($func_door_130);		//  door opens

	sys.trigger($grunt_growl);	

	sys.trigger($grunt_backdoor);
*/
}

////////////////////////////////////////////////////////////////////////
//	Locking some doors for on the way out.	////////////////////////
////////////////////////////////////////////////////////////////////////
void afterBattleCleanUp()
{
	// leading to where the power goes out.
	$func_static_8558.setShaderParm(7, 0);
	$func_door_115.lock(1);

	// small back room where the grunt comes running out from.
	$func_static_8737.setShaderParm(7, 0);
	$func_door_130.lock(1);

	// upper door, from where the player just entered.
	$func_static_8504.setShaderParm(7, 0);
	$func_door_109.lock(1);

	// near the control room at the begining of the map
	$func_static_9249.setShaderParm(7, 1);
	$func_door_136.lock(0);

}
////////////////////////////////////////////////////////////////////////
//	Tech marine requesting backup		////////////////////////
////////////////////////////////////////////////////////////////////////
void bravo_snd()
{
	thread afterBattleCleanUp();
	
	sys.trigger($bravoteam_snd);

	sys.trigger($killSpawnerTrig);
	afterBattle = 1;
}

///////////////////////////////////////////////////////////////////////////
//	all Strogg break free and attack the marines.	///////////////////
///////////////////////////////////////////////////////////////////////////
void endLevelCleanUp()
{
	//sys.trigger($end_level);

	//unhide the endlevel gui
	sys.trigger($func_static_53425);
	
	//hide the startlevel gui
	sys.trigger($func_static_53426);
	
	//activate exit area trigger
	sys.trigger($exitArea);
	
	//$func_static_10548.setShaderParm(7, 1);

	$Leffler.hide();
	$Blascoe.hide();
	$Newquist.hide();
	$Schilder.hide();
	$Hess.hide();
	$Berry.hide();
	
	// at some point dead guys will be spawned in and their parts.
}
void headsUp()
{
//	sys.println("map_building_b::headsUup");

	$m_screen_3.setGuiParm("noninteractive", "1"); // the gui can't be clicked until this is set back to 0

	radioChatterPlayWait ($headsup, "");
	sys.wait(.5);
	radioChatterPlayWait ($ohcrap1, "");
	radioChatterPlayWait ($ohcrap2, "");
	radioChatterPlayWait ($ohcrap3, "");
	radioChatterPlayWait ($ohcrap4, "");
}

void hell()
{
//	sys.println("hell");

	$moveable_barrel_medium2b_20.remove();
	$moveable_barrel_medium2b_21.remove();
	sys.waitFrame();
	
	// door leading to voss control room
	$func_static_8473.setShaderParm(7, 0);
	$func_door_132.lock(1);

	// door below, exiting the room
	$func_static_8731.setShaderParm(7, 0);
	$func_door_127.lock(1);

	// lock previous door entering control room area.
	$func_static_8549.setShaderParm(7, 0);
	$func_static_8550.setShaderParm(7, 0);
	$func_door_112.lock(1);

	$pointman.remove();
	$coverman.remove();
	$marine2door.remove();
	sys.wait(.1);
//	sys.trigger($headsup);
	sys.trigger($pointman_2);
	sys.wait(8.5);
	
	//  Remove Marines	//
	$scared_guy_1.remove();
	$scared_guy_2.remove();
	$scared_guy_3.remove();
	//$startled_marine_01.remove();
	$startled_marine_02.remove();
	$startled_marine_03.remove();

	$door_guard_1.remove();
	
	thread endLevelCleanUp();
	
	sys.trigger($eating_grunt_trig);	// activate the trigger for the eating grunt	
	sys.trigger($chatter03Trig);		// battleChatter03
	sys.trigger($lastChatter);		// last chatter sent to the player for the end of the level.

	// changing the alarm sounds	//
	////////////////////////////////////////////
	$alarm01.remove();
//	sys.trigger($alarm01_1);
	$alarm02.remove();
	sys.trigger($alarm02_1);
	$alarm03.remove();
	sys.trigger($alarm03_1);
	$alarm04.remove();
	sys.trigger($alarm04_1);
	$alarm05.remove();
	sys.trigger($alarm05_1);
	$alarm06.remove();
	sys.trigger($alarm06_1);
	$alarm07.remove();
	sys.trigger($alarm07_1);
	$alarm08.remove();
	sys.trigger($alarm08_1);

	////////////////////////////////////////////
	// changing the alarm sounds	///////////
	

	$Newberry.remove();
}

//////////////////////////////////////////////////////////////////////////////////////////
//	Marines fighting a Gladiator				////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////

void gladiator_snd()
{
	sys.trigger($glad_001);						// Holy mother...
	sys.wait(3.2);
	sys.trigger($glad_002);						// Oh my...
	sys.wait(0.7);
	sys.trigger($glad_002_2);					// requesting...
//	sys.trigger($glad_002_2_radio);				// over radio...
}

void battleChatter01()
{
//	sys.wait( 1 + sys.random(.5) );		
	radioChatterPlayWait ($battleChatter01a, "");
//	radioChatterPlayWait ($battleChatter01b, "");
//	radioChatterPlayWait ($battleChatter01c, "");
	radioChatterPlayWait ($battleChatter01d, "");
}

void battleChatter02()
{
	radioChatterPlayWait ($battleSndA01, "");
	radioChatterPlayWait ($battleSndA02, "");
	radioChatterPlayWait ($battleSndA03, "");
	radioChatterPlayWait ($battleSndA04, "");
//	radioChatterPlayWait ($battleSndA05, "");
	radioChatterPlayWait ($battleSndA06, "");
	radioChatterPlayWait ($battleSndA07, "");
	radioChatterPlayWait ($battleSndA08, "");
	sys.wait(2);
	radioChatterPlayWait ($battleSndA09, "");
	sys.wait(1);
	radioChatterPlayWait ($battleSndA10, "");
}

void battleChatter03()
{
	radioChatterPlayWait ($battleChatter03a, "");
	
//	overlaps the battle with the gladiator.
//	radioChatterPlayWait ($battleChatter03b, "");
//	radioChatterPlayWait ($battleChatter03c, "");
}

void endingChatter()
{
	$entranceDead.show();
	$entranceBlood.show();
	$foyerBlood.show();
	$foyerBlood01.show();
	
	thread battleChatter02();

/*
	moved to building_b::removeWindowGuy

	radioChatterPlayWait ($lastChatter_1, "");
	radioChatterPlayWait ($lastChatter_2, "");
	radioChatterPlayWait ($lastChatter_3, "");
	radioChatterPlayWait ($lastChatter_4, "");
	radioChatterPlayWait ($lastChatter_5, "");
	radioChatterPlayWait ($lastChatter_6, "");
*/
}
void madison()
{
	radioChatterPlayWait ($madisonSnd, "");	
}
void ragMarine()
{
	sys.wait(1.5);
	$gun_jammed.becomeRagdoll();	
}
void rail_shot()
{
	$smashed_door_clip.remove();

	aiScriptedAnim( $rail_shooter, "railgun_attack2", 4, 1 );

	$rail_shooter.setEnemy($gun_jammed);
	while ( !aiScriptedDone ( $rail_shooter ) ) {
		sys.waitFrame ( );
	}
	
	thread ragMarine();
	sys.wait(1);
	aiScriptedMoveWait ($rail_shooter, $gladiator_point, 16, true );
	$rail_shooter.remove();
	
	sys.wait(2);
	thread madison();
}
void marine_gladiator_event()
{
	// explosion to draw the players attention down.
	sys.trigger($door_explosion_4);

	// clean up and remove stuff
	$smashed_door.remove();
	$corey_light_4693.remove();

	sys.trigger($corey_light_4663);

	sys.waitFrame();
	sys.trigger($rail_shooter);
	$rail_shooter.setKey("noDamage", 1);
	aiScriptedAnimLoop ( $rail_shooter, "idle", 0 );	
	sys.trigger($gun_jammed);
	$gun_jammed.setHealth(1);
	thread gladiator_snd();

	aiScriptedAnim ( $gun_jammed, "bld_b_gun_jam", 4, 1 );

	sys.wait(4.9);
	thread rail_shot();
}

void call_gunner()
{
	sys.wait(.5);
	sys.trigger($monster_gunner_1);
}

void setupWeldHall()
{
	//	LIGHTS IN WELDING HALL		//
	//	turn off the quake chance	//

	$light_3632.setKey("quakeChance", "0");
	$light_3634.setKey("quakeChance", "0");

	$light_3815.setKey("quakeChance", "0");
	$light_3643.setKey("quakeChance", "0");
}
void testPrint()
{
//	sys.println("mmmmm????");
}
void gruntTackle()
{
	aiScriptedAnimWait ( $weld_guard_02, "bld_b_tackled_by_grnt", 4, false );
	sys.waitFrame();
	$weld_guard_02.remove();
}
void takeTorch()
{
	$welder.hide();
	$Newberry.showSurface("models/weapons/mp_guns/w_mg_lo");
}
void giveTorch()
{
	$welder.show();
	$Newberry.hideSurface("models/weapons/mp_guns/w_mg_lo");
}
void toggleWeldingLights()
{
	sys.trigger($weld_sparks_light);
	sys.trigger($weld_sparks_light_1);
	sys.trigger($welder_sparks);
}
void cuttingDoorSnd()
{
	$Newberry.setTalkState(TALK_WAIT);

	aiSpeakWait($Newberry, "lipsync_vo_1_1_8_5_0002");
	sys.wait(1);
	aiSpeakWait($Newberry, "lipsync_vo_1_1_8_5_0003");	
	sys.wait(1);
	aiSpeakWait($Newberry, "lipsync_vo_1_1_8_5_0004");	
	sys.wait(1);	
	aiSpeakWait($Newberry, "lipsync_vo_1_1_8_5_0005");	
	sys.wait(.5);
	aiSpeakWait($Newberry, "lipsync_vo_1_1_8_0005");	
}
void WeldLightsOut()
{
//	sys.println("neverDormant guys");
	$Newberry.setNeverDormant(1);
	$weld_guard_02.setNeverDormant(1);
	$monster_grunt_3.setNeverDormant(1);

	sys.trigger($ai_tether_none_4);

	thread gen_eng_05_shake();
	thread gen_eng_06_shake();

	// the guard waves them to the door.
	aiScriptedAnim ( $weld_guard_02, "bld_b_over_here", 4, true );
	sys.wait(1);
	sys.trigger($corey_light_blue);	
	sys.trigger($corey_light_red);
	sys.trigger($light_thump);
	sys.trigger($light_3634);
	sys.trigger($light_3632);
	sys.trigger($light_4706);
	sys.trigger($light_4707);
	sys.trigger($fadeSupports);	
	
//	$Newberry.disableHeal();
//	$Newberry.setTalkState ( TALK_BUSY );
	$Newberry.setScript ( "onclick", "" );
	$Newberry.setLeader( $null_entity );
	
	// the welder stops following the player and walks to his spot.
	aiScriptedMoveWait ( $Newberry, $welder_here, 16, false );
	aiScriptedFaceWait ( $Newberry, $welder_spot, false );

	$Newberry.setHealth(1000);
	
	thread gruntTackle();

	// Escorted to the door.
	sys.trigger($OBJ_EscortNew_complete);

	aiScriptedAnim ( $Newberry, "bld_b_welder", 4, true );
	sys.wait(3.5);
	
	thread toggleWeldingLights();

	sys.wait(10);
	sys.trigger($weld_door_unlock);	// door unlocking sound
	sys.wait(1);

	thread toggleWeldingLights();
	
	sys.trigger($weld_door_toggle);
	sys.trigger($func_door_125);
	$pointman_1.remove();					// becasue he doesn't need to be there at this point

	// Hide all the guys in the control room.
	$Voss.hide();
	$Strassa.hide();
	$Sledge.hide();
	$door_guard_1.hide();
	$hurt_marine.hide();
	$medic_1.hide();

	//	Guys walk into room, grunt attacks him	

	///////////////////////////
	//	TURN LIGHTS ON	///
	///////////////////////////

	sys.wait(3);
	sys.trigger($weld_lights_on);

	//sys.trigger($red_weld_light);	// turn off red light

	///////////////////////////////////////////
	//	grunt catwalk room lights on	///
	sys.trigger($light_3671);
	sys.trigger($light_3688);
	sys.trigger($light_3686);
	sys.trigger($light_3670);
	sys.trigger($light_3568);
	sys.trigger($light_3682);
	sys.trigger($light_3569);
	sys.trigger($light_3701);
	sys.trigger($light_3700);
	sys.trigger($light_3814);
	sys.trigger($light_3677);

	$light_3670.setKey("quakeChance", "1");
	$light_3671.setKey("quakeChance", "1");
	$light_3568.setKey("quakeChance", "1");
	$light_3569.setKey("quakeChance", "1");
	$light_3686.setKey("quakeChance", "1");
	$light_3688.setKey("quakeChance", "1");
	$light_3677.setKey("quakeChance", "1");

	//	grunt catwalk room lights on	///
	///////////////////////////////////////////

	//////////////////////////
	// 	unlocking doors	//

	//sys.trigger($light_4137);	// turns off the red.
	//sys.trigger($light_4136);

	//sys.trigger($light_4075);	// turns on the green.
	//sys.trigger($light_4076);

	//$light_4075.setKey("quakeChance", "1");
	//$light_4076.setKey("quakeChance", "1");

	// 	unlocking doors	//
	//////////////////////////
	
	// 	will be set up to the grunts health as to when the lights come back on	//

	$func_static_8641.show();
	$func_static_8646.show();
	$func_static_8676.show();
}
void pointman_talks()
{
	aiScriptedAnimWait ( $pointman_1, "bld_b_defense_grid", 2, true );
	$pointman_1.setTalkState(TALK_OK);

	// Give the Perimeter defense grid Objective to the player.
	sys.trigger($OBJ_DownFences);	
}

/////////////////////////////////////////////////////////////////////
//  Grunt runs past window as player passes                 /////////
/////////////////////////////////////////////////////////////////////
void window_grunt_event()
{
	sys.trigger($window_grunt_1);
	sys.wait(.1);
	sys.trigger($grunt_roar_1);
	aiScriptedMoveWait( $window_grunt_1, $target_null_ulb_22, 16, 1 );
	aiScriptedFaceWait( $window_grunt_1, $target_null_ulb_23, 1 );		
	aiScriptedAnimWait ( $window_grunt_1, "jump_building_b", 2, true );

//	aiScriptedMoveWait ( $window_grunt_1, $grunt_path_5, 16, true );
//	sys.wait(3);
	$window_grunt_1.remove();
}

void da_ripper_event()
{
	sys.trigger($da_ripper);

	sys.trigger($glad_light);
	$glad_light.show();
}

void grunt2ControlRoom()
{
	// door exiting the room
	$func_static_8731.setShaderParm(7, 1);
	$func_door_127.lock(0);
	$func_door_127.open();

	sys.trigger($door_130_toggle);
	sys.trigger($func_door_130);		//  door opens

	sys.trigger($grunt_growl);
	
	
	sys.trigger($gruntTether);
//	sys.trigger($grunt_backdoor);
}
void smashedGlass()
{
	aiScriptedAnimWait ( $pointman_2, "bld_b_smashed_againt_glass", 0, false );
	$pointman_2.becomeRagdoll();
}
void removeWindowGuy()
{
	// marine gets remove right when the grunt is killed.
	$pointman_2.remove();
	
	sys.wait(1);
	radioChatterPlayWait ($lastChatter_1, "");
	radioChatterPlayWait ($lastChatter_2, "");
	radioChatterPlayWait ($lastChatter_3, "");
	radioChatterPlayWait ($lastChatter_4, "");
	radioChatterPlayWait ($lastChatter_5, "");
	radioChatterPlayWait ($lastChatter_6, "");
	
	sys.trigger($item_objective_2);
}
void grunt_attack()
{
	$knock_trigger.remove();
	$glass_knock.remove();
	thread smashedGlass();
	aiScriptedAnim ( $grunt_2_window, "slamming_mar_glass", 0, true );
	sys.wait(3.5);
	sys.trigger($func_door_110);
	sys.wait(5.3);
	sys.trigger($glass_knock_crack);
	$pointman_blood.show();
	$glass_crack_1.show();
	$pointman_blood_1.show();
	//$pointman_blood_2.show();
	$pointman_blood_3.show();
	sys.wait(5);
	
	$func_static_8556.setShaderParm(7, 1);
	$func_static_8555.setShaderParm(7, 1);
	$func_door_114.lock(0);
	$func_door_114.open();
	sys.wait(1);

	aiScriptedMoveWait ( $grunt_2_window, $grunt_go_here, 16, 1 );
	sys.waitFrame();
	$grunt_2_window.remove();	

	sys.wait(.5);
	thread grunt2ControlRoom();
}

////////////////////////////////////////
//	pump room stuff	////////////////
/////////////////////////////////////////


void Floor1VerticalShaftsPartB()
{
	// move caps down, disconnecting from the ceiling
	$floor1VerticalCap1.time(1.5 + sys.random(0.5));
	$floor1VerticalCap2.time(1.5 + sys.random(0.5));
	$floor1VerticalCap3.time(1.5 + sys.random(0.5));
	$floor1VerticalCap4.time(1.5 + sys.random(0.5));
	$floor1VerticalCap1.move(DOWN, 32);
	$floor1VerticalCap2.move(DOWN, 32);
	$floor1VerticalCap3.move(DOWN, 32);
	$floor1VerticalCap4.move(DOWN, 32);

	$floor1VerticalCap1.setKey("snd_move", "vertical_piston_cap_down");
	$floor1VerticalCap2.setKey("snd_move", "vertical_piston_cap_down");
	$floor1VerticalCap3.setKey("snd_move", "vertical_piston_cap_down");
	$floor1VerticalCap4.setKey("snd_move", "vertical_piston_cap_down");

	sys.waitFor($floor1VerticalCap1);
	sys.waitFor($floor1VerticalCap2);
	sys.waitFor($floor1VerticalCap3);
	sys.waitFor($floor1VerticalCap4);
	
	floor1ShaftsReady = 1;
}
		
void Floor1VerticalShaftsPartC()
{
	// move caps back up, briefly reconnecting with the ceiling
	$floor1VerticalCap1.time(1.5 + sys.random(0.5));
	$floor1VerticalCap2.time(1.5 + sys.random(0.5));
	$floor1VerticalCap3.time(1.5 + sys.random(0.5));
	$floor1VerticalCap4.time(1.5 + sys.random(0.5));
	$floor1VerticalCap1.move(UP, 32);
	$floor1VerticalCap2.move(UP, 32);
	$floor1VerticalCap3.move(UP, 32);
	$floor1VerticalCap4.move(UP, 32);

	$floor1VerticalCap1.setKey("snd_move", "vertical_piston_cap_up");
	$floor1VerticalCap2.setKey("snd_move", "vertical_piston_cap_up");
	$floor1VerticalCap3.setKey("snd_move", "vertical_piston_cap_up");
	$floor1VerticalCap4.setKey("snd_move", "vertical_piston_cap_up");

	sys.waitFor($floor1VerticalCap1);
	sys.waitFor($floor1VerticalCap2);
	sys.waitFor($floor1VerticalCap3);
	sys.waitFor($floor1VerticalCap4);
	
	// move shafts down beneath floor 
	sys.wait(1.0);
	$floor1VerticalShaft1.time(2.5 + sys.random(0.5));
	$floor1VerticalShaft2.time(2.5 + sys.random(0.5));
	$floor1VerticalShaft3.time(2.5 + sys.random(0.5));
	$floor1VerticalShaft4.time(2.5 + sys.random(0.5));
	$floor1VerticalShaft1.move(DOWN, 196);
	$floor1VerticalShaft2.move(DOWN, 196);
	$floor1VerticalShaft3.move(DOWN, 196);
	$floor1VerticalShaft4.move(DOWN, 196);

	$floor1VerticalShaft1.setKey("snd_move", "vertical_piston_down");
	$floor1VerticalShaft2.setKey("snd_move", "vertical_piston_down");
	$floor1VerticalShaft3.setKey("snd_move", "vertical_piston_down");
	$floor1VerticalShaft4.setKey("snd_move", "vertical_piston_down");

	sys.waitFor($floor1VerticalShaft1);
	sys.waitFor($floor1VerticalShaft2);
	sys.waitFor($floor1VerticalShaft3);
	sys.waitFor($floor1VerticalShaft4);
		
	floor1ShaftsReady = 1;
}
		
void Floor1VerticalShaftsPartA()
{
	// raise shafts
	$floor1VerticalShaft1.time(2.0 + sys.random(0.5));
	$floor1VerticalShaft2.time(2.0 + sys.random(0.5));
	$floor1VerticalShaft3.time(2.0 + sys.random(0.5));
	$floor1VerticalShaft4.time(2.0 + sys.random(0.5));
	$floor1VerticalShaft1.move(UP, 196);
	$floor1VerticalShaft2.move(UP, 196);
	$floor1VerticalShaft3.move(UP, 196);
	$floor1VerticalShaft4.move(UP, 196);

	$floor1VerticalShaft1.setKey("snd_move", "vertical_piston_up");
	$floor1VerticalShaft2.setKey("snd_move", "vertical_piston_up");
	$floor1VerticalShaft3.setKey("snd_move", "vertical_piston_up");
	$floor1VerticalShaft4.setKey("snd_move", "vertical_piston_up");

	sys.waitFor($floor1VerticalShaft1);
	sys.waitFor($floor1VerticalShaft2);
	sys.waitFor($floor1VerticalShaft3);
	sys.waitFor($floor1VerticalShaft4);
	sys.wait(1);
	
	floor1ShaftsReady = 1;
}

void Floor2VerticalShaftsPartB()
{
	// move caps up, disconnecting from the floor
	$floor2VerticalCap1.time(1.5 + sys.random(0.5));
	$floor2VerticalCap2.time(1.5 + sys.random(0.5));
	$floor2VerticalCap3.time(1.5 + sys.random(0.5));
	$floor2VerticalCap4.time(1.5 + sys.random(0.5));
	$floor2VerticalCap1.move(UP, 32);
	$floor2VerticalCap2.move(UP, 32);
	$floor2VerticalCap3.move(UP, 32);
	$floor2VerticalCap4.move(UP, 32);

	$floor2VerticalCap1.setKey("snd_move", "vertical_piston_cap_up");
	$floor2VerticalCap2.setKey("snd_move", "vertical_piston_cap_up");
	$floor2VerticalCap3.setKey("snd_move", "vertical_piston_cap_up");
	$floor2VerticalCap4.setKey("snd_move", "vertical_piston_cap_up");

	sys.waitFor($floor2VerticalCap1);
	sys.waitFor($floor2VerticalCap2);
	sys.waitFor($floor2VerticalCap3);
	sys.waitFor($floor2VerticalCap4);
	
	floor2ShaftsReady = 1;
}
		
void Floor2VerticalShaftsPartC()
{
	// move caps back down, briefly reconnecting with the floor
	$floor2VerticalCap1.time(1.5 + sys.random(0.5));
	$floor2VerticalCap2.time(1.5 + sys.random(0.5));
	$floor2VerticalCap3.time(1.5 + sys.random(0.5));
	$floor2VerticalCap4.time(1.5 + sys.random(0.5));
	$floor2VerticalCap1.move(DOWN, 32);
	$floor2VerticalCap2.move(DOWN, 32);
	$floor2VerticalCap3.move(DOWN, 32);
	$floor2VerticalCap4.move(DOWN, 32);

	$floor2VerticalCap1.setKey("snd_move", "vertical_piston_cap_down");
	$floor2VerticalCap2.setKey("snd_move", "vertical_piston_cap_down");
	$floor2VerticalCap3.setKey("snd_move", "vertical_piston_cap_down");
	$floor2VerticalCap4.setKey("snd_move", "vertical_piston_cap_down");

	sys.waitFor($floor2VerticalCap1);
	sys.waitFor($floor2VerticalCap2);
	sys.waitFor($floor2VerticalCap3);
	sys.waitFor($floor2VerticalCap4);
	
	// move shafts up into ceiling 
	sys.wait(1.0);
	$floor2VerticalShaft1.time(2.5 + sys.random(0.5));
	$floor2VerticalShaft2.time(2.5 + sys.random(0.5));
	$floor2VerticalShaft3.time(2.5 + sys.random(0.5));
	$floor2VerticalShaft4.time(2.5 + sys.random(0.5));
	$floor2VerticalShaft1.move(UP, 196);
	$floor2VerticalShaft2.move(UP, 196);
	$floor2VerticalShaft3.move(UP, 196);
	$floor2VerticalShaft4.move(UP, 196);

	$floor2VerticalShaft1.setKey("snd_move", "vertical_piston_up");
	$floor2VerticalShaft2.setKey("snd_move", "vertical_piston_up");
	$floor2VerticalShaft3.setKey("snd_move", "vertical_piston_up");
	$floor2VerticalShaft4.setKey("snd_move", "vertical_piston_up");

	sys.waitFor($floor2VerticalShaft1);
	sys.waitFor($floor2VerticalShaft2);
	sys.waitFor($floor2VerticalShaft3);
	sys.waitFor($floor2VerticalShaft4);
	
	floor2ShaftsReady = 1;
}
		
void Floor2VerticalShaftsPartA()
{
	// lower shafts
	$floor2VerticalShaft1.time(2.0 + sys.random(0.5));
	$floor2VerticalShaft2.time(2.0 + sys.random(0.5));
	$floor2VerticalShaft3.time(2.0 + sys.random(0.5));
	$floor2VerticalShaft4.time(2.0 + sys.random(0.5));
	$floor2VerticalShaft1.move(DOWN, 196);
	$floor2VerticalShaft2.move(DOWN, 196);
	$floor2VerticalShaft3.move(DOWN, 196);
	$floor2VerticalShaft4.move(DOWN, 196);

	$floor2VerticalShaft1.setKey("snd_move", "vertical_piston_down");
	$floor2VerticalShaft2.setKey("snd_move", "vertical_piston_down");
	$floor2VerticalShaft3.setKey("snd_move", "vertical_piston_down");
	$floor2VerticalShaft4.setKey("snd_move", "vertical_piston_down");

	sys.waitFor($floor2VerticalShaft1);
	sys.waitFor($floor2VerticalShaft2);
	sys.waitFor($floor2VerticalShaft3);
	sys.waitFor($floor2VerticalShaft4);
	sys.wait(1);
	
	floor2ShaftsReady = 1;
}

//////////////////////////////////////////////////////////
//	Marines yelling about the gate 		//////////
//////////////////////////////////////////////////////////

void Pointman_glass()
{
	$pointman_1.setHealth(1);
	aiScriptedAnim ( $pointman_1, "slapped", 4, true );		// pointman gets killed at the window.
}

void Grunt_2_pointman()
{
	//aiScriptedAnim ( $grunt_2_window, "slapping", 4, false );		// grunt runs up and kills the pointman
	sys.wait(6.8);
	$pointman_blood.show();
	sys.wait(0.37);
	$pointman_blood_1.show();
	sys.wait(0.62);
	$pointman_blood_2.show();
	aiScriptedWait ( $grunt_2_window );
	aiScriptedMoveWait ( $grunt_2_window, $grunt_2_window_spot, 16, true );		
	$grunt_2_window.remove();
}

void MarineWindow()
{
	sys.trigger($grunt_2_window);
	
	thread Pointman_glass();
	thread Grunt_2_pointman();
}

////////////////////////////////////////////////////////
//	Marine battle sounds	////////////////////////
////////////////////////////////////////////////////////

void ComLinkChatter()
{
	while(1)
	{
		if (afterBattle == 0)
		{
			sys.wait(6 + sys.random(.5));
		}	
		else	
		{
			sys.wait(12);
		}		
		sys.trigger($marine_chatter);
		sys.trigger($comm_chirp);
		
	}
}

///////////////////////////////////////////////
//	Grunt throwing a marine	      /////////
///////////////////////////////////////////////

void guyshoot()
{

	sys.trigger($marine_firing);		// marine is shooting at a grunt.

	sys.wait(.1);

	aiScriptedAnimWait ($marine_firing, "range_attack_loop1", 4, false );
	aiScriptedAnimWait ($marine_firing, "range_attack_loop1", 0, false );		// marine shooting
	aiScriptedAnimWait ($marine_firing, "range_attack_loop1", 0, false );		// marine shooting
	aiScriptedAnimWait ($marine_firing, "range_attack_loop1", 0, false );		// marine shooting
	aiScriptedAnimWait ($marine_firing, "range_attack_loop1", 0, true );	// marine shooting

}

void HurtMarine()
{
	sys.trigger($hurt_marine_2);
	sys.wait(.1);
	$hurt_marine_2.setTalkState(TALK_WAIT);

	aiScriptedAnimLoop ( $hurt_marine_2, "bld_b_wounded_marine_loop_a", 0 );
	$hurt_marine_2.startSound("snd_marine_writhe", SND_CHANNEL_ANY, false);
}

//////////////////////////////////////////////////////////
//	Marines yelling about the door		//////////
//////////////////////////////////////////////////////////
void spawnMarineDoor2()
{
	aiScriptedAnimLoop ( $marine2door, "crouch_idle", 0 );
	aiScriptedAnimLoop ( $coverman, "cover_idle", 0 );
	aiScriptedAnimLoop ( $pointman, "cover_idle", 0 );	
}
void shoeMove()
{
	aiScriptedAnimWait ( $pointman, "bld_b_third_room_sarge", 4, true );
	$pointman.setTalkState(TALK_OK); 
}
void zickMove()
{
	aiScriptedAnimWait ( $marine2door, "bld_b_third_room3", 4, true );	
	$marine2door.setTalkState(TALK_OK); 
}
void MarineDoor2()
{
	// rotate machines in the next room.	
	thread gen_eng_03_shake();
	thread gen_eng_04_shake();

//	aiSpeakWait( $marine2door, "lipsync_vo_1_1_4_0001" );
//	aiSpeakWait( $coverman, "lipsync_vo_1_1_4_0002" );

//	sys.println("Movement");
	thread shoeMove();
	thread zickMove();
	aiScriptedAnim ( $coverman, "bld_b_third_room2", 4, true );	

	sys.wait(4);
	sys.trigger($mad_strogg_02);
	
	playAnimWait($smashed_door, ANIMCHANNEL_ALL, "smash");
	playAnimWait($smashed_door, ANIMCHANNEL_ALL, "idle_end");
}

//////////////////////////////////////////////////////////
//	The pointman points to the goal.			//////////
//////////////////////////////////////////////////////////

void GoalPoint()
{
	aiScriptedAnimWait ( $pointman, "points", 2, false );		// the pointman points to the goal for the player
	aiScriptedAnimLoop ( $pointman, "mar8_idle", 2 );
}

void ChuckBody2()
{
	$forced_marine_2.show();
	$forced_marine_2.startRagdoll();
	sys.trigger($forcefield_2);
	sys.trigger($chuck02_ex);
	sys.trigger($forced_steam_2);
	sys.wait(.35);
	$good_wall.hide();
	$bad_wall.show();
	sys.trigger($forcebody_snd_01);		// body hitting the wall
	$forcefield_2.remove();
}

void eatingGrunt()
{
	$blast_door.hide();
	$rippedGlass.hide();
	$grunt_crack_01.hide();
	$grunt_crack_02.hide();
	
	$rippedDoor.show();
	$rippedDecal.show();
	$gruntFood.show();
	$eating_grunt.setAnimRate(1.5);
	aiScriptedAnimWait( $eating_grunt, "body_digging", 2, true );		// the grunt eating a dead marine.
	$eating_grunt.setAnimRate(1);
	$eating_grunt.setEnemy($player1);
}

/////////////////////////////////////////////////////////////////////
//  Path for spawner to enter room where Jones dies         /////////
/////////////////////////////////////////////////////////////////////
void jones_room_spawner(entity a)
{
	sys.wait(.1);
	aiScriptedMoveWait ( a, $spawner_path_1, 16, false );
	aiScriptedMoveWait ( a, $spawner_path_3, 16, true);
}

/////////////////////////////////////////////////////////////////////
//  Marines runs past window as player passes                /////////
/////////////////////////////////////////////////////////////////////
void window_marine_event()
{
	sys.trigger($runner_1);
	aiScriptedMove ($runner_1, $runner_target_1, 16, true );
	sys.trigger($runner_2);
	sys.wait(.1);
	aiScriptedMove ($runner_2, $runner_target_2, 16, true );
	sys.wait(3);
	$runner_1.remove();
	$runner_2.remove();
}
void spawnVoss()
{
	aiScriptedAnimLoop($Voss, "relax_idle", 4);
}
void spawnStrauss()
{
	aiScriptedAnimLoop($Strassa, "bld_b_gui_guy_loop", 4);
}
void spawnSledge()
{
	$Sledge.setMoveSpeed ( AIMOVESPEED_WALK );	
	$Sledge.lookAt($player1);	
	aiScriptedMoveWait( $Sledge, $sledgeStop1, 16, 1 );
	// faces a door waits for the player
	aiScriptedFaceWait( $Sledge, $func_door_103, 1 );		
	aiScriptedAnimLoop($Sledge, "relax_idle", 4);
}
void spawnFoyerRandoms()
{
// Eventually loop marines into something more than "relax_idle"
	aiScriptedAnimLoop($Singer, "relax_idle", 4);
	aiScriptedAnimLoop($Rodriguez, "relax_idle", 4);
	$door_guard_1.setTalkState(TALK_OK);
}
void rodSingTalk()
{
	$Rodriguez.lookAt($player1);
	$Singer.lookAt($player1);
	aiSpeakWait( $Rodriguez, "lipsync_1" );
	$Rodriguez.lookAt($null_entity);
	aiSpeakWait( $Singer, "lipsync_1" );
	$Singer.lookAt($null_entity);	
}
void foyerSetup()
{
	// setup doors
	$func_static_8463.setShaderParm(7, 0);
	$func_door_99.lock(1);

	// lower loading bay doors
	$func_static_9265.setShaderParm(7, 0);
	$func_door_141.lock(1);
}
void spawnRod()
{
	$door_guard_1.setTalkState(TALK_OK);
	$Rodriguez.setTalkState(TALK_WAIT); 
	$Singer.setTalkState(TALK_WAIT); 

	$Rodriguez.setMoveSpeed ( AIMOVESPEED_WALK );	
	$Rodriguez.lookAt($player1);
	sys.wait(3);
	$Rodriguez.lookAt($null_entity);
	sys.wait(5.5);
	$Rodriguez.lookAt($Schilder);
	sys.wait(1.5);	
	$Rodriguez.lookAt($null_entity);
	aiScriptedMoveWait( $Rodriguez, $rod2IntroLift, 16, 1 );
	aiScriptedFaceWait( $Rodriguez, $Newquist, 1 );		
}
void rod2FoyerSpot()
{
	sys.wait(1);
	aiScriptedMoveWait( $Rodriguez, $rod2Foyer, 16, 1 );
	aiScriptedFaceWait( $Rodriguez, $Strassa, 1 );		
	$Rodriguez.setMoveSpeed ( AIMOVESPEED_DEFAULT );	
}
void spawnNew()
{
	aiScriptedAnimLoop($Newquist, "relax_idle", 1);
	$Newquist.lookAt($player1);
	sys.wait(2);
	aiScriptedAnimWait($Newquist, "point_left", 8, 1);	
	aiScriptedAnimLoop($Newquist, "relax_idle", 1);
	$Schilder.lookAt($Newquist);	
	sys.wait(3);
	$Newquist.lookAt($Schilder);
	$Schilder.lookAt($null_entity);
	sys.wait(6);
	$Newquist.lookAt($player1);
	sys.wait(15);
	$Newquist.lookAt($null_entity);	
}
void loseWar()
{
	$Leffler.lookAt($Blascoe);
	$Blascoe.lookAt($Leffler);
	sys.wait(4);
	$Blascoe.setTalkState(TALK_OK);
	$Leffler.setTalkState(TALK_OK);
	aiSpeakWait($Leffler, "lipsync_vo_1_1_9_0001");	
	aiSpeakWait($Blascoe, "lipsync_vo_1_1_9_0002");	
	$Blascoe.lookAt($player1);
	aiSpeakWait($Leffler, "lipsync_vo_1_1_9_0003");	
	$Blascoe.lookAt($Leffler);
	aiSpeakWait($Blascoe, "lipsync_vo_1_1_9_0004");	

	$Blascoe.lookAt($null_entity);
	$Leffler.lookAt($null_entity);
}

void berryHess()
{
	sys.trigger($Berry);
	sys.trigger($Hess);	
	// look at the body
	$Berry.lookAt($func_static_53787);
	aiSpeakWait($Berry, "lipsync_vo_1_1_10_0001");	
	$Hess.lookAt($Berry);
	aiSpeakWait($Hess, "lipsync_vo_1_1_10_0002");	
	$Hess.enableHeal();
	$Hess.lookAt($null_entity);
	$Berry.lookAt($Hess);
	$Berry.setTalkState(TALK_OK);
	aiSpeakWait($Berry, "lipsync_vo_1_1_10_0003");	
	$Berry.lookAt($null_entity);
}

void spawnSchil()
{
	$Schilder.hideSurface("models/weapons/mp_guns/w_sg");
	$Schilder.hideSurface("models/weapons/mp_guns/w_sg_mod_ammo");
	$Schilder.hideSurface("models/weapons/mp_guns/w_mg_lo");
	$Schilder.hideSurface("models/weapons/mp_guns/w_hb");
	$Schilder.hideSurface("models/weapons/mp_guns/w_hb_battery");

	$dummyNailGun.show();
	aiScriptedAnim( $Schilder, "af_pose", 4, 0 );	
	$dummyNailGun.bindToJoint($Schilder, "r_wrist", 1);	
	aiScriptedAnimLoop( $Schilder, "relax_idle", 0 );
}
void activateLift()
{
	sys.wait(1);
	
	// elevator in buiding_b that leads to the lower level.
	$func_elevator_31.setGuiParm("noninteractive", "0"); // the gui can't be clicked until this is set back to 0
}
void giveNail()
{
	$Voss.setTalkState ( TALK_WAIT ); 
	$Strassa.setTalkState( TALK_WAIT );

	$dummyNailGun.hide();
	sys.trigger($giveNailGun);
	sys.trigger($pickUpWeaponSnd);

	aiScriptedAnimWait( $Schilder, "player_gift2_end", 0, 1 );
	aiScriptedAnim( $Schilder, "unarmed_idle", 0, 1 );
//	aiScriptedAnimLoop( $Schilder, "unarmed_idle", 0 );

	aiSpeakDone( $Schilder );		

	thread activateLift();
	
	$Schilder.setMoveSpeed ( AIMOVESPEED_WALK );	
	aiScriptedMoveWait( $Schilder, $introLiftStop_1, 16, 1 );
	// faces a crate in the corner
	aiScriptedFaceWait( $Schilder, $func_static_53840, 1 );		

	while(1)
	{
		aiScriptedAnimWait($Schilder, "weaponless_idle5_start", 4, 1);	
		aiScriptedAnimWait($Schilder, "weaponless_idle5_loop", 4, 1);	
		aiScriptedAnimWait($Schilder, "weaponless_idle5_end", 4, 1);			
		aiScriptedAnimLoop( $Schilder, "unarmed_idle", 0 );
		sys.wait( 30 + sys.random(10) );
		aiScriptedAnimWait($Schilder, "weaponless_idle3_start", 4, 1);	
		aiScriptedAnimWait($Schilder, "weaponless_idle3_loop", 4, 1);	
		aiScriptedAnimWait($Schilder, "weaponless_idle3_end", 4, 1);			
		aiScriptedAnimLoop( $Schilder, "unarmed_idle", 0 );
		sys.wait( 30 + sys.random(10) );		
	}

}
void giveGun()
{
	aiSpeak( $Schilder, "lipsync_2" );

	aiScriptedAnimWait( $Schilder, "player_gift_start", 4, 1 );
	aiScriptedAnimLoop( $Schilder, "player_gift_loop", 0 );
	
	sys.trigger($giveGunTrig);
}

void introMarine()
{
//	aiScriptedAnimLoop($Schilder, "relax_idle", 1);
	sys.wait(10);

	sys.trigger($nailGunTrig);
}
void introElevator()
{
	thread introMarine();

	$introPump1.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(.25);
	$introPump2.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(.25);
	$introPump3.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(.25);
	$introPump4.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(.25);
	$introPump5.playCycle(ANIMCHANNEL_ALL, "cycle");
	sys.wait(.25);
	$introPump6.playCycle(ANIMCHANNEL_ALL, "cycle");
}
void se1HideFlares()
{
	$se1LightBox1aFlare.hide();
	$se1LightBox1bFlare.hide();
	$se1LightBox2aFlare.hide();
	$se1LightBox2bFlare.hide();
	$se1LightBox3aFlare.hide();
	$se1LightBox3bFlare.hide();
	$se1LightBox4aFlare.hide();
	$se1LightBox4bFlare.hide();
	$se1LightBox5aFlare.hide();
	$se1LightBox5bFlare.hide();
	$se1LightBox6aFlare.hide();
	$se1LightBox6bFlare.hide();
	$se1LightBox7aFlare.hide();
	$se1LightBox7bFlare.hide();
	$se1LightBox8aFlare.hide();
	$se1LightBox8bFlare.hide();
	$se1LightBox9aFlare.hide();
	$se1LightBox9bFlare.hide();
	$se1LightBox10aFlare.hide();
	$se1LightBox10bFlare.hide();
	$se1LightBox11aFlare.hide();
	$se1LightBox11bFlare.hide();
}

void subentranceSetup()
{
	subEntrance03LightsOff();
	subEntrance02LightsOff();
	entityColorChange($target_null_se1_lightboxes, '0 0 0');
	thread se1HideFlares();
}
void CacheSounds() 
{
	//Cache sounds for hover truck
	$world.cacheSoundShader("vehicle_hovertruck_idle");
}
void main()
{
	$func_elevator_31.setGuiParm("noninteractive", "1"); // the gui can't be clicked until this is set back to 0

	$func_movator_30.setGuiParm("noninteractive", "1"); // the gui can't be clicked until this is set back to 0

	thread CacheSounds();
	
	thread setupWeldHall();
	thread foyerSetup();
	thread loseWar();
	thread introElevator();

	thread subentranceSetup();

	sys.trigger($Blascoe);
	sys.trigger($Leffler);
	sys.trigger($Newquist);
	sys.trigger($Rodriguez);
	sys.trigger($Schilder);
}

}	//End namespace
